import{_ as l,M as p,p as u,q as r,R as n,N as s,V as e,t as a,a1 as c}from"./framework-8980b429.js";const d={},k=n("h1",{id:"asyncio-mqtt-异步-mqtt-客户端",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#asyncio-mqtt-异步-mqtt-客户端","aria-hidden":"true"},"#"),a(" asyncio-mqtt - 异步 MQTT 客户端")],-1),m={class:"no-link"},v={href:"https://github.com/sbtinstruments/asyncio-mqtt/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"},y=n("img",{src:"https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),b={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},h=n("img",{src:"https://img.shields.io/pypi/v/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),g={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},w=n("img",{src:"https://img.shields.io/pypi/pyversions/asyncio-mqtt.svg",alt:"",loading:"lazy"},null,-1),_={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},q=n("img",{src:"https://img.shields.io/pypi/dm/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),f={href:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml",target:"_blank",rel:"noopener noreferrer"},x=n("img",{src:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml/badge.svg",alt:"",loading:"lazy"},null,-1),N={href:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml",target:"_blank",rel:"noopener noreferrer"},T=n("img",{src:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml/badge.svg",alt:"",loading:"lazy"},null,-1),C={href:"https://codecov.io/gh/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},E=n("img",{src:"https://img.shields.io/codecov/c/github/sbtinstruments/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),P={href:"https://results.pre-commit.ci/latest/github/sbtinstruments/asyncio-mqtt/main",target:"_blank",rel:"noopener noreferrer"},S=n("img",{src:"https://results.pre-commit.ci/badge/github/sbtinstruments/asyncio-mqtt/main.svg",alt:"",loading:"lazy"},null,-1),L={href:"https://github.com/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},z=n("img",{src:"https://img.shields.io/badge/typing-strict-green.svg",alt:"",loading:"lazy"},null,-1),R={href:"https://github.com/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},I=n("img",{src:"https://img.shields.io/badge/code style-black-black",alt:"",loading:"lazy"},null,-1),B={href:"https://github.com/charliermarsh/ruff",target:"_blank",rel:"noopener noreferrer"},M=n("img",{src:"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json",alt:"",loading:"lazy"},null,-1),j={class:"table-of-contents"},V=n("h2",{id:"_1-项目简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-项目简介","aria-hidden":"true"},"#"),a(" 1. 项目简介")],-1),G=n("thead",null,[n("tr",null,[n("th",null,"项目"),n("th",null,"信息")])],-1),O=n("td",null,"项目地址",-1),W={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},H={href:"https://github.com/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},Q=n("td",null,"官方文档",-1),A={href:"https://sbtinstruments.github.io/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},D=n("tr",null,[n("td",null,"开源协议"),n("td",null,"BSD-3-Clause")],-1),F=n("tr",null,[n("td",null,"Python 版本"),n("td",null,"Python 3.7 ~ 3.11")],-1),U=n("tr",null,[n("td",null,"标签"),n("td",null,"asyncio")],-1),Y=n("code",null,"asyncio-mqtt",-1),J={href:"https://github.com/eclipse/paho.mqtt.python",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"paho-mqtt",-1),X=c(`<ul><li>没有回调</li><li>没有更多的返回代码（使用 <code>MqttError</code> 就够了）</li><li>优雅的断开连接</li><li>与异步代码兼容</li><li>完全的类型提示</li><li>整个系统只有不到 900 行的代码。</li></ul><p><code>asyncio-mqtt</code> 安装后同样也会安装 <code>paho.mqtt</code>，部分配置可能用到 <code>paho.mqtt</code> 库中的内容。</p><p>安装：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> asyncio-mqtt
</code></pre></div><p>直接安装 GitHub 上的最新版本：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> git+https://github.com/sbtinstruments/asyncio-mqtt
</code></pre></div><div class="hint-container warning"><p class="hint-container-title">Windows 使用注意</p><p>从 Python 3.8 开始，<code>asyncio</code> 的默认事件循环是 <code>ProactorEventLoop</code>。该循环不支持 <code>asyncio-mqtt</code> 需要的 <code>add_reader</code> 方法。请切换到一个支持 <code>add_reader</code> 方法的事件循环，比如内置的 <code>SelectorEventLoop</code>。</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># 修改为 Windows 的 &quot;Selector&quot; 事件循环</span>
asyncio<span class="token punctuation">.</span>set_event_loop_policy<span class="token punctuation">(</span>asyncio<span class="token punctuation">.</span>WindowsSelectorEventLoopPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 正常使用即可</span>
asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div></div><h2 id="_2-快速开始" tabindex="-1"><a class="header-anchor" href="#_2-快速开始" aria-hidden="true">#</a> 2. 快速开始</h2><p>发布：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
    <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>
</code></pre></div><p>订阅：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">with</span> Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
        <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
        <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>
</code></pre></div><p><code>payload</code> 可以是 <code>int</code>、<code>float</code>、<code>str</code>、<code>bytes</code>、<code>bytearray</code> 和 <code>None</code>。</p><p>数字被默认转换为字符串，如果需要数字原始值，可以使用 <code>struct.pack()</code>。<code>None</code> 代表零长度负载。</p><h2 id="_3-客户端配置" tabindex="-1"><a class="header-anchor" href="#_3-客户端配置" aria-hidden="true">#</a> 3. 客户端配置</h2>`,15),Z={href:"https://github.com/eclipse/paho.mqtt.python",target:"_blank",rel:"noopener noreferrer"},$=c(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt
<span class="token keyword">import</span> paho<span class="token punctuation">.</span>mqtt <span class="token keyword">as</span> mqtt


aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span>
    hostname<span class="token operator">=</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">,</span>  <span class="token comment"># 唯一的必须参数</span>
    port<span class="token operator">=</span><span class="token number">1883</span><span class="token punctuation">,</span>
    username<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    password<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    logger<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    client_id<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    tls_context<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    tls_params<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    proxy<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    protocol<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    will<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    clean_session<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    transport<span class="token operator">=</span><span class="token string">&quot;tcp&quot;</span><span class="token punctuation">,</span>
    keepalive<span class="token operator">=</span><span class="token number">60</span><span class="token punctuation">,</span>
    bind_address<span class="token operator">=</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    bind_port<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>
    clean_start<span class="token operator">=</span>mqtt<span class="token punctuation">.</span>client<span class="token punctuation">.</span>MQTT_CLEAN_START_FIRST_ONLY<span class="token punctuation">,</span>
    properties<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    message_retry_set<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span>
    socket_options<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    max_concurrent_outgoing_calls<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    websocket_path<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    websocket_headers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-最佳实战" tabindex="-1"><a class="header-anchor" href="#_4-最佳实战" aria-hidden="true">#</a> 4. 最佳实战</h2><h3 id="_4-1-重新连接" tabindex="-1"><a class="header-anchor" href="#_4-1-重新连接" aria-hidden="true">#</a> 4.1 重新连接</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    reconnect_interval <span class="token operator">=</span> <span class="token number">5</span>  <span class="token comment"># In seconds</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
                <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
                    <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
                    <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                        <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> aiomqtt<span class="token punctuation">.</span>MqttError <span class="token keyword">as</span> error<span class="token punctuation">:</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;Error &quot;</span><span class="token interpolation"><span class="token punctuation">{</span>error<span class="token punctuation">}</span></span><span class="token string">&quot;. Reconnecting in </span><span class="token interpolation"><span class="token punctuation">{</span>reconnect_interval<span class="token punctuation">}</span></span><span class="token string"> seconds.&#39;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>reconnect_interval<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-取消任务" tabindex="-1"><a class="header-anchor" href="#_4-2-取消任务" aria-hidden="true">#</a> 4.2 取消任务</h3>`,5),nn=n("code",null,"asyncio.timeout",-1),sn=c(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token comment"># 5 秒后取消请求</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> asyncio<span class="token punctuation">.</span>timeout<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">await</span> listen<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 忽略 TimeoutError</span>
    <span class="token keyword">except</span> asyncio<span class="token punctuation">.</span>TimeoutError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python 3.11 之前的版本可用 <code>task.cancel</code> 来取消：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建任务</span>
    task <span class="token operator">=</span> loop<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>listen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 等待特定的任务</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token comment"># 取消任务</span>
    task<span class="token punctuation">.</span>cancel<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 等待任务取消</span>
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> task
    <span class="token keyword">except</span> asyncio<span class="token punctuation">.</span>CancelledError<span class="token punctuation">:</span>
        <span class="token keyword">pass</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-分享客户端" tabindex="-1"><a class="header-anchor" href="#_4-3-分享客户端" aria-hidden="true">#</a> 4.3 分享客户端</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">publish_humidity</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">publish_temperature</span><span class="token punctuation">(</span>client<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;temperature/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">28.3</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">await</span> publish_humidity<span class="token punctuation">(</span>client<span class="token punctuation">)</span>
        <span class="token keyword">await</span> publish_temperature<span class="token punctuation">(</span>client<span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-过滤请求" tabindex="-1"><a class="header-anchor" href="#_4-4-过滤请求" aria-hidden="true">#</a> 4.4 过滤请求</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">if</span> message<span class="token punctuation">.</span>topic<span class="token punctuation">.</span>matches<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[humidity/outside] </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> message<span class="token punctuation">.</span>topic<span class="token punctuation">.</span>matches<span class="token punctuation">(</span><span class="token string">&quot;+/inside&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[+/inside] </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> message<span class="token punctuation">.</span>topic<span class="token punctuation">.</span>matches<span class="token punctuation">(</span><span class="token string">&quot;temperature/#&quot;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;[temperature/#] </span><span class="token interpolation"><span class="token punctuation">{</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-不阻塞运行" tabindex="-1"><a class="header-anchor" href="#_4-5-不阻塞运行" aria-hidden="true">#</a> 4.5 不阻塞运行</h3><p>使用 <code>asyncio.TaskGroup</code>（或 <code>asyncio.gather</code>，要求 Python &lt; 3.11）来运行多个任务：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">sleep</span><span class="token punctuation">(</span>seconds<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span>seconds<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Slept for </span><span class="token interpolation"><span class="token punctuation">{</span>seconds<span class="token punctuation">}</span></span><span class="token string"> seconds!&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> asyncio<span class="token punctuation">.</span>TaskGroup<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> group<span class="token punctuation">:</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>listen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 此处开始监听</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        group<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要和其他异步 Web 框架等结合，我们有下面的方案：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">listen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">async</span> <span class="token keyword">with</span> client<span class="token punctuation">.</span>messages<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> messages<span class="token punctuation">:</span>
            <span class="token keyword">await</span> client<span class="token punctuation">.</span>subscribe<span class="token punctuation">(</span><span class="token string">&quot;humidity/#&quot;</span><span class="token punctuation">)</span>
            <span class="token keyword">async</span> <span class="token keyword">for</span> message <span class="token keyword">in</span> messages<span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>

background_tasks <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建任务</span>
    task <span class="token operator">=</span> loop<span class="token punctuation">.</span>create_task<span class="token punctuation">(</span>listen<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token comment"># 创建引用以避免被垃圾回收</span>
    background_tasks<span class="token punctuation">.</span>add<span class="token punctuation">(</span>task<span class="token punctuation">)</span>
    task<span class="token punctuation">.</span>add_done_callback<span class="token punctuation">(</span>background_tasks<span class="token punctuation">.</span>remove<span class="token punctuation">)</span>

    <span class="token comment"># 持续运行别的任务</span>
    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-tls" tabindex="-1"><a class="header-anchor" href="#_4-6-tls" aria-hidden="true">#</a> 4.6 TLS</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt
<span class="token keyword">import</span> ssl

tls_params <span class="token operator">=</span> aiomqtt<span class="token punctuation">.</span>TLSParameters<span class="token punctuation">(</span>
    ca_certs<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    certfile<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    keyfile<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    cert_reqs<span class="token operator">=</span>ssl<span class="token punctuation">.</span>CERT_REQUIRED<span class="token punctuation">,</span>
    tls_version<span class="token operator">=</span>ssl<span class="token punctuation">.</span>PROTOCOL_TLS<span class="token punctuation">,</span>
    ciphers<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">,</span> tls_params<span class="token operator">=</span>tls_params<span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-7-代理" tabindex="-1"><a class="header-anchor" href="#_4-7-代理" aria-hidden="true">#</a> 4.7 代理</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> asyncio_mqtt <span class="token keyword">as</span> aiomqtt
<span class="token keyword">import</span> socks

proxy_params <span class="token operator">=</span> aiomqtt<span class="token punctuation">.</span>ProxySettings<span class="token punctuation">(</span>
    proxy_type<span class="token operator">=</span>socks<span class="token punctuation">.</span>HTTP<span class="token punctuation">,</span>
    proxy_addr<span class="token operator">=</span><span class="token string">&quot;www.example.com&quot;</span><span class="token punctuation">,</span>
    proxy_rdns<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>
    proxy_username<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
    proxy_password<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">async</span> <span class="token keyword">with</span> aiomqtt<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&quot;test.mosquitto.org&quot;</span><span class="token punctuation">,</span> proxy<span class="token operator">=</span>proxy_params<span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>
        <span class="token keyword">await</span> client<span class="token punctuation">.</span>publish<span class="token punctuation">(</span><span class="token string">&quot;humidity/outside&quot;</span><span class="token punctuation">,</span> payload<span class="token operator">=</span><span class="token number">0.38</span><span class="token punctuation">)</span>

asyncio<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function an(tn,en){const t=p("ExternalLinkIcon"),o=p("router-link"),i=p("Badge");return u(),r("div",null,[k,n("div",m,[n("p",null,[n("a",v,[y,s(t)]),n("a",b,[h,s(t)]),n("a",g,[w,s(t)]),n("a",_,[q,s(t)]),n("a",f,[x,s(t)]),n("a",N,[T,s(t)]),n("a",C,[E,s(t)]),n("a",P,[S,s(t)]),n("a",L,[z,s(t)]),n("a",R,[I,s(t)]),n("a",B,[M,s(t)])])]),n("nav",j,[n("ul",null,[n("li",null,[s(o,{to:"#_1-项目简介"},{default:e(()=>[a("1. 项目简介")]),_:1})]),n("li",null,[s(o,{to:"#_2-快速开始"},{default:e(()=>[a("2. 快速开始")]),_:1})]),n("li",null,[s(o,{to:"#_3-客户端配置"},{default:e(()=>[a("3. 客户端配置")]),_:1})]),n("li",null,[s(o,{to:"#_4-最佳实战"},{default:e(()=>[a("4. 最佳实战")]),_:1}),n("ul",null,[n("li",null,[s(o,{to:"#_4-1-重新连接"},{default:e(()=>[a("4.1 重新连接")]),_:1})]),n("li",null,[s(o,{to:"#_4-2-取消任务"},{default:e(()=>[a("4.2 取消任务")]),_:1})]),n("li",null,[s(o,{to:"#_4-3-分享客户端"},{default:e(()=>[a("4.3 分享客户端")]),_:1})]),n("li",null,[s(o,{to:"#_4-4-过滤请求"},{default:e(()=>[a("4.4 过滤请求")]),_:1})]),n("li",null,[s(o,{to:"#_4-5-不阻塞运行"},{default:e(()=>[a("4.5 不阻塞运行")]),_:1})]),n("li",null,[s(o,{to:"#_4-6-tls"},{default:e(()=>[a("4.6 TLS")]),_:1})]),n("li",null,[s(o,{to:"#_4-7-代理"},{default:e(()=>[a("4.7 代理")]),_:1})])])])])]),V,n("table",null,[G,n("tbody",null,[n("tr",null,[O,n("td",null,[n("a",W,[a("PyPI"),s(t)]),a(" | "),n("a",H,[a("GitHub"),s(t)])])]),n("tr",null,[Q,n("td",null,[n("a",A,[a("sbtinstruments.github.io"),s(t)])])]),D,F,U])]),n("p",null,[Y,a(" 提供了基于 "),n("a",J,[K,s(t)]),a(" 的现代的、异步的接口。")]),X,n("p",null,[a("在初始化客户端时，可参考下面的配置，下面的值均为默认值。关于各个参数的更多信息，请看 "),n("a",Z,[a("paho-mqtt 的文档"),s(t)]),a("。")]),$,n("p",null,[s(i,{type:"tip"},{default:e(()=>[a("3.11+")]),_:1}),a(" Python 3.11 新增了 "),nn,a("，可用监听一段时间的消息。")]),sn])}const pn=l(d,[["render",an],["__file","asyncio-mqtt.html.vue"]]);export{pn as default};

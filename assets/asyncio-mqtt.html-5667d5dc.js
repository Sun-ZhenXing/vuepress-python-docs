import{_ as r,r as e,o as i,c as D,b as s,a as n,w as o,d as a,e as t}from"./app-8cddb567.js";const y={},d=s("h1",{id:"asyncio-mqtt-异步-mqtt-客户端",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#asyncio-mqtt-异步-mqtt-客户端","aria-hidden":"true"},"#"),a(" asyncio-mqtt - 异步 MQTT 客户端")],-1),C={class:"no-link"},u={href:"https://github.com/sbtinstruments/asyncio-mqtt/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"},m=s("img",{src:"https://img.shields.io/github/license/sbtinstruments/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),v=s("br",null,null,-1),b={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},h=s("img",{src:"https://img.shields.io/pypi/v/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),_=s("br",null,null,-1),g={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},E=s("img",{src:"https://img.shields.io/pypi/pyversions/asyncio-mqtt.svg",alt:"",loading:"lazy"},null,-1),q=s("br",null,null,-1),f={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},k=s("img",{src:"https://img.shields.io/pypi/dm/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),A=s("br",null,null,-1),w={href:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml",target:"_blank",rel:"noopener noreferrer"},x=s("img",{src:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/test.yml/badge.svg",alt:"",loading:"lazy"},null,-1),F=s("br",null,null,-1),N={href:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml",target:"_blank",rel:"noopener noreferrer"},B=s("img",{src:"https://github.com/sbtinstruments/asyncio-mqtt/actions/workflows/docs.yml/badge.svg",alt:"",loading:"lazy"},null,-1),T=s("br",null,null,-1),P={href:"https://codecov.io/gh/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},S=s("img",{src:"https://img.shields.io/codecov/c/github/sbtinstruments/asyncio-mqtt",alt:"",loading:"lazy"},null,-1),L=s("br",null,null,-1),z={href:"https://results.pre-commit.ci/latest/github/sbtinstruments/asyncio-mqtt/main",target:"_blank",rel:"noopener noreferrer"},I=s("img",{src:"https://results.pre-commit.ci/badge/github/sbtinstruments/asyncio-mqtt/main.svg",alt:"",loading:"lazy"},null,-1),R=s("br",null,null,-1),j={href:"https://github.com/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},M=s("img",{src:"https://img.shields.io/badge/typing-strict-green.svg",alt:"",loading:"lazy"},null,-1),G=s("br",null,null,-1),O={href:"https://github.com/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},V=s("img",{src:"https://img.shields.io/badge/code style-black-black",alt:"",loading:"lazy"},null,-1),W=s("br",null,null,-1),H={href:"https://github.com/charliermarsh/ruff",target:"_blank",rel:"noopener noreferrer"},Q=s("img",{src:"https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/charliermarsh/ruff/main/assets/badge/v1.json",alt:"",loading:"lazy"},null,-1),U={class:"table-of-contents"},Y=s("h2",{id:"_1-项目简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-项目简介","aria-hidden":"true"},"#"),a(" 1. 项目简介")],-1),J=s("thead",null,[s("tr",null,[s("th",null,"项目"),s("th",null,"信息")])],-1),K=s("td",null,"项目地址",-1),X={href:"https://pypi.org/project/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://github.com/sbtinstruments/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},$=s("td",null,"官方文档",-1),ss={href:"https://sbtinstruments.github.io/asyncio-mqtt",target:"_blank",rel:"noopener noreferrer"},ns=s("tr",null,[s("td",null,"开源协议"),s("td",null,"BSD-3-Clause")],-1),as=s("tr",null,[s("td",null,"Python 版本"),s("td",null,"Python 3.7 ~ 3.11")],-1),ls=s("tr",null,[s("td",null,"标签"),s("td",null,"asyncio")],-1),os=s("code",null,"asyncio-mqtt",-1),ps={href:"https://github.com/eclipse/paho.mqtt.python",target:"_blank",rel:"noopener noreferrer"},es=s("code",null,"paho-mqtt",-1),ts=t(`<ul><li>没有回调</li><li>没有更多的返回代码（使用 <code>MqttError</code> 就够了）</li><li>优雅的断开连接</li><li>与异步代码兼容</li><li>完全的类型提示</li><li>整个系统只有不到 900 行的代码。</li></ul><p><code>asyncio-mqtt</code> 安装后同样也会安装 <code>paho.mqtt</code>，部分配置可能用到 <code>paho.mqtt</code> 库中的内容。</p><p>安装：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">asyncio-mqtt</span></span>
<span class="line"></span></code></pre></div><p>直接安装 GitHub 上的最新版本：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">git+https://github.com/sbtinstruments/asyncio-mqtt</span></span>
<span class="line"></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">Windows 使用注意</p><p>从 Python 3.8 开始，<code>asyncio</code> 的默认事件循环是 <code>ProactorEventLoop</code>。该循环不支持 <code>asyncio-mqtt</code> 需要的 <code>add_reader</code> 方法。请切换到一个支持 <code>add_reader</code> 方法的事件循环，比如内置的 <code>SelectorEventLoop</code>。</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># 修改为 Windows 的 &quot;Selector&quot; 事件循环</span></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())</span></span>
<span class="line"><span style="color:#6A9955;"># 正常使用即可</span></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre></div></div><h2 id="_2-快速开始" tabindex="-1"><a class="header-anchor" href="#_2-快速开始" aria-hidden="true">#</a> 2. 快速开始</h2><p>发布：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.publish(</span><span style="color:#CE9178;">&quot;humidity/outside&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">payload</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.38</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre></div><p>订阅：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;humidity/#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message.payload)</span></span>
<span class="line"></span></code></pre></div><p><code>payload</code> 可以是 <code>int</code>、<code>float</code>、<code>str</code>、<code>bytes</code>、<code>bytearray</code> 和 <code>None</code>。</p><p>数字被默认转换为字符串，如果需要数字原始值，可以使用 <code>struct.pack()</code>。<code>None</code> 代表零长度负载。</p><h2 id="_3-客户端配置" tabindex="-1"><a class="header-anchor" href="#_3-客户端配置" aria-hidden="true">#</a> 3. 客户端配置</h2>`,15),cs={href:"https://github.com/eclipse/paho.mqtt.python",target:"_blank",rel:"noopener noreferrer"},rs=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> paho.mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> mqtt</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">aiomqtt.Client(</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">hostname</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">,  </span><span style="color:#6A9955;"># 唯一的必须参数</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">port</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">1883</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">logger</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">client_id</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">tls_context</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">tls_params</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">protocol</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">will</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">clean_session</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">transport</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;tcp&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">keepalive</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">60</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">bind_address</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">bind_port</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">clean_start</span><span style="color:#D4D4D4;">=mqtt.client.MQTT_CLEAN_START_FIRST_ONLY,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">properties</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">message_retry_set</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">20</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">socket_options</span><span style="color:#D4D4D4;">=(),</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">max_concurrent_outgoing_calls</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">websocket_path</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">websocket_headers</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-最佳实战" tabindex="-1"><a class="header-anchor" href="#_4-最佳实战" aria-hidden="true">#</a> 4. 最佳实战</h2><h3 id="_4-1-重新连接" tabindex="-1"><a class="header-anchor" href="#_4-1-重新连接" aria-hidden="true">#</a> 4.1 重新连接</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    reconnect_interval = </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;"># In seconds</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;humidity/#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                        </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message.payload.decode())</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">except</span><span style="color:#D4D4D4;"> aiomqtt.MqttError </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> error:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&#39;Error &quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">error</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;. Reconnecting in </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">reconnect_interval</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> seconds.&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> asyncio.sleep(reconnect_interval)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-取消任务" tabindex="-1"><a class="header-anchor" href="#_4-2-取消任务" aria-hidden="true">#</a> 4.2 取消任务</h3>`,5),is=s("code",null,"asyncio.timeout",-1),Ds=t(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;humidity/#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message.payload)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#6A9955;"># 5 秒后取消请求</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> asyncio.timeout(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> listen()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 忽略 TimeoutError</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">except</span><span style="color:#D4D4D4;"> asyncio.TimeoutError:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Python 3.11 之前的版本可用 <code>task.cancel</code> 来取消：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;humidity/#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message.payload)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    loop = asyncio.get_event_loop()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 创建任务</span></span>
<span class="line"><span style="color:#D4D4D4;">    task = loop.create_task(listen())</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 等待特定的任务</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> asyncio.sleep(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 取消任务</span></span>
<span class="line"><span style="color:#D4D4D4;">    task.cancel()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 等待任务取消</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> task</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">except</span><span style="color:#D4D4D4;"> asyncio.CancelledError:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-分享客户端" tabindex="-1"><a class="header-anchor" href="#_4-3-分享客户端" aria-hidden="true">#</a> 4.3 分享客户端</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">publish_humidity</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">client</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.publish(</span><span style="color:#CE9178;">&quot;humidity/outside&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">payload</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.38</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">publish_temperature</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">client</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.publish(</span><span style="color:#CE9178;">&quot;temperature/outside&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">payload</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">28.3</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> publish_humidity(client)</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> publish_temperature(client)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-过滤请求" tabindex="-1"><a class="header-anchor" href="#_4-4-过滤请求" aria-hidden="true">#</a> 4.4 过滤请求</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> message.topic.matches(</span><span style="color:#CE9178;">&quot;humidity/outside&quot;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;[humidity/outside] </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">message.payload</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> message.topic.matches(</span><span style="color:#CE9178;">&quot;+/inside&quot;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;[+/inside] </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">message.payload</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> message.topic.matches(</span><span style="color:#CE9178;">&quot;temperature/#&quot;</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">                    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;[temperature/#] </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">message.payload</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-5-不阻塞运行" tabindex="-1"><a class="header-anchor" href="#_4-5-不阻塞运行" aria-hidden="true">#</a> 4.5 不阻塞运行</h3><p>使用 <code>asyncio.TaskGroup</code>（或 <code>asyncio.gather</code>，要求 Python &lt; 3.11）来运行多个任务：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">sleep</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">seconds</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> asyncio.sleep(seconds)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;Slept for </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">seconds</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> seconds!&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;humidity/#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message.payload)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> asyncio.TaskGroup() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> group:</span></span>
<span class="line"><span style="color:#D4D4D4;">        group.create_task(sleep(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">        group.create_task(listen())  </span><span style="color:#6A9955;"># 此处开始监听</span></span>
<span class="line"><span style="color:#D4D4D4;">        group.create_task(sleep(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#D4D4D4;">        group.create_task(sleep(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要和其他异步 Web 框架等结合，我们有下面的方案：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">listen</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> client.messages() </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.subscribe(</span><span style="color:#CE9178;">&quot;humidity/#&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> message </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> messages:</span></span>
<span class="line"><span style="color:#D4D4D4;">                </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(message.payload)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">background_tasks = </span><span style="color:#4EC9B0;">set</span><span style="color:#D4D4D4;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    loop = asyncio.get_event_loop()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 创建任务</span></span>
<span class="line"><span style="color:#D4D4D4;">    task = loop.create_task(listen())</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 创建引用以避免被垃圾回收</span></span>
<span class="line"><span style="color:#D4D4D4;">    background_tasks.add(task)</span></span>
<span class="line"><span style="color:#D4D4D4;">    task.add_done_callback(background_tasks.remove)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 持续运行别的任务</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> asyncio.sleep(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-6-tls" tabindex="-1"><a class="header-anchor" href="#_4-6-tls" aria-hidden="true">#</a> 4.6 TLS</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> ssl</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">tls_params = aiomqtt.TLSParameters(</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">ca_certs</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">certfile</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">keyfile</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">cert_reqs</span><span style="color:#D4D4D4;">=ssl.CERT_REQUIRED,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">tls_version</span><span style="color:#D4D4D4;">=ssl.PROTOCOL_TLS,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">ciphers</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">tls_params</span><span style="color:#D4D4D4;">=tls_params) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.publish(</span><span style="color:#CE9178;">&quot;humidity/outside&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">payload</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.38</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-7-代理" tabindex="-1"><a class="header-anchor" href="#_4-7-代理" aria-hidden="true">#</a> 4.7 代理</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio_mqtt </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> aiomqtt</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> socks</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">proxy_params = aiomqtt.ProxySettings(</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy_type</span><span style="color:#D4D4D4;">=socks.HTTP,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy_addr</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;www.example.com&quot;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy_rdns</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy_username</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">proxy_password</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">None</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">main</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> aiomqtt.Client(</span><span style="color:#CE9178;">&quot;test.mosquitto.org&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">proxy</span><span style="color:#D4D4D4;">=proxy_params) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> client:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> client.publish(</span><span style="color:#CE9178;">&quot;humidity/outside&quot;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">payload</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">0.38</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(main())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function ys(ds,Cs){const l=e("ExternalLinkIcon"),p=e("router-link"),c=e("Badge");return i(),D("div",null,[d,s("div",C,[s("p",null,[s("a",u,[m,n(l)]),v,s("a",b,[h,n(l)]),_,s("a",g,[E,n(l)]),q,s("a",f,[k,n(l)]),A,s("a",w,[x,n(l)]),F,s("a",N,[B,n(l)]),T,s("a",P,[S,n(l)]),L,s("a",z,[I,n(l)]),R,s("a",j,[M,n(l)]),G,s("a",O,[V,n(l)]),W,s("a",H,[Q,n(l)])])]),s("nav",U,[s("ul",null,[s("li",null,[n(p,{to:"#_1-项目简介"},{default:o(()=>[a("1. 项目简介")]),_:1})]),s("li",null,[n(p,{to:"#_2-快速开始"},{default:o(()=>[a("2. 快速开始")]),_:1})]),s("li",null,[n(p,{to:"#_3-客户端配置"},{default:o(()=>[a("3. 客户端配置")]),_:1})]),s("li",null,[n(p,{to:"#_4-最佳实战"},{default:o(()=>[a("4. 最佳实战")]),_:1}),s("ul",null,[s("li",null,[n(p,{to:"#_4-1-重新连接"},{default:o(()=>[a("4.1 重新连接")]),_:1})]),s("li",null,[n(p,{to:"#_4-2-取消任务"},{default:o(()=>[a("4.2 取消任务")]),_:1})]),s("li",null,[n(p,{to:"#_4-3-分享客户端"},{default:o(()=>[a("4.3 分享客户端")]),_:1})]),s("li",null,[n(p,{to:"#_4-4-过滤请求"},{default:o(()=>[a("4.4 过滤请求")]),_:1})]),s("li",null,[n(p,{to:"#_4-5-不阻塞运行"},{default:o(()=>[a("4.5 不阻塞运行")]),_:1})]),s("li",null,[n(p,{to:"#_4-6-tls"},{default:o(()=>[a("4.6 TLS")]),_:1})]),s("li",null,[n(p,{to:"#_4-7-代理"},{default:o(()=>[a("4.7 代理")]),_:1})])])])])]),Y,s("table",null,[J,s("tbody",null,[s("tr",null,[K,s("td",null,[s("a",X,[a("PyPI"),n(l)]),a(" | "),s("a",Z,[a("GitHub"),n(l)])])]),s("tr",null,[$,s("td",null,[s("a",ss,[a("sbtinstruments.github.io"),n(l)])])]),ns,as,ls])]),s("p",null,[os,a(" 提供了基于 "),s("a",ps,[es,n(l)]),a(" 的现代的、异步的接口。")]),ts,s("p",null,[a("在初始化客户端时，可参考下面的配置，下面的值均为默认值。关于各个参数的更多信息，请看 "),s("a",cs,[a("paho-mqtt 的文档"),n(l)]),a("。")]),rs,s("p",null,[n(c,{type:"tip"},{default:o(()=>[a("3.11+")]),_:1}),a(" Python 3.11 新增了 "),is,a("，可用监听一段时间的消息。")]),Ds])}const ms=r(y,[["render",ys],["__file","asyncio-mqtt.html.vue"]]);export{ms as default};

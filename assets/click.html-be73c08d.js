import{_ as l,M as e,p,q as c,R as n,N as a,V as i,t as s,a1 as u}from"./framework-a0a2d26f.js";const r={},d=n("h1",{id:"click-增强的命令行参数处理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#click-增强的命令行参数处理","aria-hidden":"true"},"#"),s(" click - 增强的命令行参数处理")],-1),k={class:"table-of-contents"},_=n("h2",{id:"_1-项目简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-项目简介","aria-hidden":"true"},"#"),s(" 1. 项目简介")],-1),h=n("thead",null,[n("tr",null,[n("th",null,"项目"),n("th",null,"信息")])],-1),m=n("td",null,"项目地址",-1),v={href:"https://pypi.org/project/click/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/pallets/click",target:"_blank",rel:"noopener noreferrer"},g=n("td",null,"官方文档",-1),f={href:"https://click.palletsprojects.com/",target:"_blank",rel:"noopener noreferrer"},q=n("tr",null,[n("td",null,"开源协议"),n("td",null,"BSD 3")],-1),y=n("tr",null,[n("td",null,"Python 版本"),n("td",null,">= Python 3.7")],-1),x=n("tr",null,[n("td",null,"标签"),n("td",null,"工具")],-1),N=u(`<p>Click 用于以可组合的方式用尽可能少的代码创建漂亮的命令行界面。它是命令行界面创建工具包。它是高度可配置的，并且开箱即用的合理默认值。</p><p>它的目的是使编写命令行工具的过程变得快速而有趣，同时也防止因无法实现预定的 CLI API 而引起的任何错误。</p><p>特点是：</p><ul><li>命令的任意嵌套</li><li>自动生成帮助页</li><li>支持在运行时偷懒加载子命令</li></ul><p>安装：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-U</span> click
</code></pre></div><p>简单示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> click

<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>command</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&quot;--count&quot;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;Number of greetings.&quot;</span><span class="token punctuation">)</span>
<span class="token decorator annotation punctuation">@click<span class="token punctuation">.</span>option</span><span class="token punctuation">(</span><span class="token string">&quot;--name&quot;</span><span class="token punctuation">,</span> prompt<span class="token operator">=</span><span class="token string">&quot;Your name&quot;</span><span class="token punctuation">,</span> <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&quot;The person to greet.&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span>count<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;Simple program that greets NAME for a total of COUNT times.&quot;&quot;&quot;</span>
    <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">:</span>
        click<span class="token punctuation">.</span>echo<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;Hello, </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">!&quot;</span></span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    hello<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8);function w(C,I){const o=e("router-link"),t=e("ExternalLinkIcon");return p(),c("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(o,{to:"#_1-项目简介"},{default:i(()=>[s("1. 项目简介")]),_:1})])])]),_,n("table",null,[h,n("tbody",null,[n("tr",null,[m,n("td",null,[n("a",v,[s("PyPI"),a(t)]),s(" | "),n("a",b,[s("GitHub"),a(t)])])]),n("tr",null,[g,n("td",null,[n("a",f,[s("palletsprojects.com"),a(t)])])]),q,y,x])]),N])}const V=l(r,[["render",w],["__file","click.html.vue"]]);export{V as default};

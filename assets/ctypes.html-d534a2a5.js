import{_ as d,r as t,o as D,c as y,b as s,a,w as l,d as n,e as c}from"./app-25f9176f.js";const u={},v=s("h1",{id:"使用-ctypes-访问-c-代码",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#使用-ctypes-访问-c-代码","aria-hidden":"true"},"#"),n(" 使用 ctypes 访问 C 代码")],-1),C={class:"table-of-contents"},b=s("em",null,"Python Cookbook",-1),g={href:"https://python3-cookbook.readthedocs.io/zh_CN/latest/chapters/p15_c_extensions.html",target:"_blank",rel:"noopener noreferrer"},m=c('<h2 id="_1-ctypes-基本使用" tabindex="-1"><a class="header-anchor" href="#_1-ctypes-基本使用" aria-hidden="true">#</a> 1. ctypes 基本使用</h2><p>对于需要调用 C 代码的一些小的问题，通常使用 Python 标准库中的 <code>ctypes</code> 模块就足够了。</p><div class="hint-container info"><p class="hint-container-title">共享库</p><p>名词 <strong>共享库</strong> 和 <strong>动态链接库</strong> 是一致的，在 Windows 下为 <code>.dll</code> 文件，在 Linux 下是 <code>.so</code> 文件。</p></div><p>要使用 <code>ctypes</code>，你首先要确保你要访问的 C 代码已经被编译到和 Python 解释器兼容（同样的架构、字大小、编译器等）的某个共享库中了。</p>',4),x={href:"https://github.com/Sun-ZhenXing/vuepress-python-notes/tree/main/docs/mixed-programming/c-cpp-mixed/src/sample.c",target:"_blank",rel:"noopener noreferrer"},_=s("code",null,"sample.c",-1),h=c(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;">/* sample.c */</span></span>
<span class="line"><span style="color:#C586C0;">#include</span><span style="color:#569CD6;"> </span><span style="color:#CE9178;">&lt;math.h&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* Compute the greatest common divisor */</span></span>
<span class="line"><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">gcd</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> g = y;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> (x &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        g = x;</span></span>
<span class="line"><span style="color:#D4D4D4;">        x = y % x;</span></span>
<span class="line"><span style="color:#D4D4D4;">        y = g;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> g;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* Test if (x0,y0) is in the Mandelbrot set or not */</span></span>
<span class="line"><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">in_mandel</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">x0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">y0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> x = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, y = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, xtemp;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> (n &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        xtemp = x * x - y * y + x0;</span></span>
<span class="line"><span style="color:#D4D4D4;">        y = </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;"> * x * y + y0;</span></span>
<span class="line"><span style="color:#D4D4D4;">        x = xtemp;</span></span>
<span class="line"><span style="color:#D4D4D4;">        n -= </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (x * x + y * y &gt; </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* Divide two numbers */</span></span>
<span class="line"><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">divide</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;">* </span><span style="color:#9CDCFE;">remainder</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> quot = a / b;</span></span>
<span class="line"><span style="color:#D4D4D4;">    *remainder = a % b;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* Average values in an array */</span></span>
<span class="line"><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">avg</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;">* </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> i;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> total = </span><span style="color:#B5CEA8;">0.0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> (i = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">; i &lt; n; i++) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        total += </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">[i];</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> total / n;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* A C data structure */</span></span>
<span class="line"><span style="color:#569CD6;">typedef</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> Point {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> x, y;</span></span>
<span class="line"><span style="color:#D4D4D4;">} Point;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">/* Function involving a C data structure */</span></span>
<span class="line"><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">distance</span><span style="color:#D4D4D4;">(Point* </span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">, Point* </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">hypot</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">-&gt;</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">-&gt;</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">p1</span><span style="color:#D4D4D4;">-&gt;</span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;"> - </span><span style="color:#9CDCFE;">p2</span><span style="color:#D4D4D4;">-&gt;</span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>编译方法：</p>`,2),E=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"gcc"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"--share"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"sample.c"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"-o"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"sample.dll")]),n(`
`),s("span",{class:"line"})])])],-1),f=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"gcc"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"--share"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"sample.c"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"-o"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"sample.so")]),n(`
`),s("span",{class:"line"})])])],-1),A=c(`<p>可以使用 <code>ctypes.util.find_library()</code> 函数来查找，在 Linux 系统下面表现如下：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> ctypes.util </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> find_library</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">find_library(</span><span style="color:#CE9178;">&#39;m&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># &#39;/usr/lib/libm.dylib&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">find_library(</span><span style="color:#CE9178;">&#39;pthread&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># &#39;/usr/lib/libpthread.dylib&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">find_library(</span><span style="color:#CE9178;">&#39;sample&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># &#39;/usr/local/lib/libsample.so&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用 <code>ctypes.cdll.LoadLibrary()</code> 来加载共享库：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">_mod = ctypes.cdll.LoadLibrary(_path)</span></span>
<span class="line"></span></code></pre></div><p>像下面的 C 程序：</p><div class="language-c line-numbers-mode" data-ext="c"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">in_mandel</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">x0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">y0</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">n</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> x = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, y = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">, xtemp;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> (n &gt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">        xtemp = x * x - y * y + x0;</span></span>
<span class="line"><span style="color:#D4D4D4;">        y = </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;"> * x * y + y0;</span></span>
<span class="line"><span style="color:#D4D4D4;">        x = xtemp;</span></span>
<span class="line"><span style="color:#D4D4D4;">        n -= </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> (x * x + y * y &gt; </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们需要编写一个签名来确保它可用：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># int in_mandel(double, double, int)</span></span>
<span class="line"><span style="color:#D4D4D4;">in_mandel = _mod.in_mandel</span></span>
<span class="line"><span style="color:#D4D4D4;">in_mandel.argtypes = (ctypes.c_double, ctypes.c_double, ctypes.c_int)</span></span>
<span class="line"><span style="color:#D4D4D4;">in_mandel.restype = ctypes.c_int</span></span>
<span class="line"></span></code></pre></div><p>函数参数 <code>.argtypes</code> 属性是一个元组，是参数类型签名，<code>.restype</code> 就是相应的返回类型。</p><p>如果不能正确签名，会导致解释器崩溃。</p><h2 id="_2-c-类型、ctypes-类型和-python-类型对应关系" tabindex="-1"><a class="header-anchor" href="#_2-c-类型、ctypes-类型和-python-类型对应关系" aria-hidden="true">#</a> 2. C 类型、ctypes 类型和 Python 类型对应关系</h2><p>下表展示了 C 类型、ctypes 类型和 Python 类型对应关系。</p><table><thead><tr><th style="text-align:left;"><code>ctypes</code> 类型</th><th style="text-align:left;">C 类型</th><th style="text-align:center;">Python 类型</th></tr></thead><tbody><tr><td style="text-align:left;"><code>c_bool</code></td><td style="text-align:left;"><code>_Bool</code></td><td style="text-align:center;"><code>bool</code></td></tr><tr><td style="text-align:left;"><code>c_char</code></td><td style="text-align:left;"><code>char</code></td><td style="text-align:center;"><code>bytes</code></td></tr><tr><td style="text-align:left;"><code>c_wchar</code></td><td style="text-align:left;"><code>wchar_t</code></td><td style="text-align:center;"><code>str</code></td></tr><tr><td style="text-align:left;"><code>c_byte</code></td><td style="text-align:left;"><code>char</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_ubyte</code></td><td style="text-align:left;"><code>unsigned char</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_short</code></td><td style="text-align:left;"><code>short</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_ushort</code></td><td style="text-align:left;"><code>unsigned short</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_int</code></td><td style="text-align:left;"><code>int</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_uint</code></td><td style="text-align:left;"><code>unsigned int</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_long</code></td><td style="text-align:left;"><code>long</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_ulong</code></td><td style="text-align:left;"><code>unsigned long</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_longlong</code></td><td style="text-align:left;"><code>__int64</code> 或 <code>long long</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_ulonglong</code></td><td style="text-align:left;"><code>unsigned __int64</code> 或 <code>unsigned long long</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_size_t</code></td><td style="text-align:left;"><code>size_t</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_ssize_t</code></td><td style="text-align:left;"><code>ssize_t</code> 或 <code>Py_ssize_t</code></td><td style="text-align:center;"><code>int</code></td></tr><tr><td style="text-align:left;"><code>c_float</code></td><td style="text-align:left;"><code>float</code></td><td style="text-align:center;"><code>float</code></td></tr><tr><td style="text-align:left;"><code>c_double</code></td><td style="text-align:left;"><code>double</code></td><td style="text-align:center;"><code>float</code></td></tr><tr><td style="text-align:left;"><code>c_longdouble</code></td><td style="text-align:left;"><code>long double</code></td><td style="text-align:center;"><code>float</code></td></tr><tr><td style="text-align:left;"><code>c_char_p</code></td><td style="text-align:left;"><code>char*</code></td><td style="text-align:center;"><code>bytes</code> 或 <code>None</code></td></tr><tr><td style="text-align:left;"><code>c_wchar_p</code></td><td style="text-align:left;"><code>wchar_t*</code></td><td style="text-align:center;"><code>str</code> 或 <code>None</code></td></tr><tr><td style="text-align:left;"><code>c_void_p</code></td><td style="text-align:left;"><code>void*</code></td><td style="text-align:center;"><code>int</code> 或 <code>None</code></td></tr></tbody></table><h2 id="_3-指针" tabindex="-1"><a class="header-anchor" href="#_3-指针" aria-hidden="true">#</a> 3. 指针</h2><p>指针用法：<code>ctypes.POINTER(ctypes.c_int)</code> 表示 <code>int*</code>。</p><p><code>ctypes.cast()</code> 用于支持 <strong>强制类型转换</strong>，例如 <code>ctypes.cast(ptr, ctypes.POINTER(ctypes.c_double))</code>，将 <code>int</code> 型的 <code>ptr</code> 转换为 <code>ctypes.c_double</code> 型指针。</p><p>如果指针不能正确使用，会导致严重的错误：</p><div class="language-c" data-ext="c"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">divide</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">a</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">b</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;">* </span><span style="color:#9CDCFE;">remainder</span><span style="color:#D4D4D4;">) {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> quot = a / b;</span></span>
<span class="line"><span style="color:#D4D4D4;">    *remainder = a % b;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre></div><p>如果这样使用：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">x = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">divide(</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, x)</span></span>
<span class="line"><span style="color:#6A9955;"># ctypes.ArgumentError</span></span>
<span class="line"></span></code></pre></div><p>正确的用法：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">x = ctypes.c_int()</span></span>
<span class="line"><span style="color:#D4D4D4;">divide(</span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">, x)</span></span>
<span class="line"><span style="color:#6A9955;"># 3</span></span>
<span class="line"><span style="color:#D4D4D4;">x.value</span></span>
<span class="line"><span style="color:#6A9955;"># 1</span></span>
<span class="line"></span></code></pre></div><p>对于那些不像 Python 的 C 调用，通常可以写一个小的包装函数。这里，我们让 <code>divide()</code> 函数通过元组来返回两个结果：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># int divide(int, int, int *)</span></span>
<span class="line"><span style="color:#D4D4D4;">_divide = _mod.divide</span></span>
<span class="line"><span style="color:#D4D4D4;">_divide.argtypes = (ctypes.c_int, ctypes.c_int, ctypes.POINTER(ctypes.c_int))</span></span>
<span class="line"><span style="color:#D4D4D4;">_divide.restype = ctypes.c_int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">divide</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">x</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">y</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    rem = ctypes.c_int()</span></span>
<span class="line"><span style="color:#D4D4D4;">    quot = _divide(x,y,rem)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> quot, rem.value</span></span>
<span class="line"></span></code></pre></div><p>对于 C 语言的数组呢？数组就是指针，所以必须传入正确的指针。具体如何向 C 库传入一个指针类型呢？</p><p><code>DoubleArrayType</code> 演示了怎样处理这种情况。 在这个类中定义了一个单个方法 <code>from_param()</code>。</p><p>这个方法的角色是接受一个单个参数然后将其向下转换为一个合适的 <code>ctypes</code> 对象（本例中是一个 <code>ctypes.c_double</code> 的指针）。</p><p>可以直接构造一个 C 数组：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">nums = [</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">a = (ctypes.c_double * </span><span style="color:#DCDCAA;">len</span><span style="color:#D4D4D4;">(nums))(*nums)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">a[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#6A9955;"># 1.0</span></span>
<span class="line"></span></code></pre></div><p>对于数组对象，<code>from_array()</code> 提取底层的内存指针并将其转换为一个 <code>ctypes</code> 指针对象。例如：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> array</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">a = array.array(</span><span style="color:#CE9178;">&#39;d&#39;</span><span style="color:#D4D4D4;">,[</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">])</span></span>
<span class="line"><span style="color:#6A9955;"># array(&#39;d&#39;, [1.0, 2.0, 3.0])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">ptr, _ = a.buffer_info()</span></span>
<span class="line"><span style="color:#D4D4D4;">ptr</span></span>
<span class="line"><span style="color:#6A9955;"># 4298687200（运行时可能不一样）</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">ctypes.cast(ptr, ctypes.POINTER(ctypes.c_double))</span></span>
<span class="line"><span style="color:#6A9955;"># &lt;__main__.LP_c_double object at 0x10069cd40&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>from_ndarray()</code> 演示了对于 numpy 数组的转换操作。通过定义 <code>DoubleArrayType</code> 类并在 <code>avg()</code> 类型签名中使用它，那么这个函数就能接受多个不同的类数组输入了。</p><div class="language-c" data-ext="c"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">typedef</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">struct</span><span style="color:#D4D4D4;"> Point {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">double</span><span style="color:#D4D4D4;"> x, y;</span></span>
<span class="line"><span style="color:#D4D4D4;">} Point;</span></span>
<span class="line"></span></code></pre></div><p>对应 Python 代码：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Point</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">ctypes</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">Structure</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    _fields_ = [(</span><span style="color:#CE9178;">&#39;x&#39;</span><span style="color:#D4D4D4;">, ctypes.c_double),</span></span>
<span class="line"><span style="color:#D4D4D4;">                (</span><span style="color:#CE9178;">&#39;y&#39;</span><span style="color:#D4D4D4;">, ctypes.c_double)]</span></span>
<span class="line"></span></code></pre></div><p>由于 <code>ctypes</code> 并不是完全自动化， 那么你就必须花费大量时间来编写所有的类型签名，就像例子中那样，对于大规模的、包含很多复杂函数签名的 C 程序并不适用。</p>`,36);function k(B,F){const e=t("router-link"),r=t("ExternalLinkIcon"),i=t("CodeTabs");return D(),y("div",null,[v,s("nav",C,[s("ul",null,[s("li",null,[a(e,{to:"#_1-ctypes-基本使用"},{default:l(()=>[n("1. ctypes 基本使用")]),_:1})]),s("li",null,[a(e,{to:"#_2-c-类型、ctypes-类型和-python-类型对应关系"},{default:l(()=>[n("2. C 类型、ctypes 类型和 Python 类型对应关系")]),_:1})]),s("li",null,[a(e,{to:"#_3-指针"},{default:l(()=>[n("3. 指针")]),_:1})])])]),s("p",null,[n("本文参考 "),b,n(),s("a",g,[n("中文翻译"),a(r)]),n(" 的第十五章：C 语言扩展来编写的。")]),m,s("p",null,[n("下面我们使用 "),s("a",x,[_,a(r)]),n(" 这段 C 代码来演示。")]),h,a(i,{id:"30",data:[{id:"Windows"},{id:"Linux"}],"tab-id":"sys"},{title0:l(({value:o,isActive:p})=>[n("Windows")]),title1:l(({value:o,isActive:p})=>[n("Linux")]),tab0:l(({value:o,isActive:p})=>[E]),tab1:l(({value:o,isActive:p})=>[f]),_:1}),A])}const w=d(u,[["render",k],["__file","ctypes.html.vue"]]);export{w as default};

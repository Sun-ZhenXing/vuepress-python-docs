import{_ as o,r as p,o as r,c,b as s,a as l,w as e,d as n,e as t}from"./app-e398544c.js";const D={},i=s("h1",{id:"进制转换",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#进制转换","aria-hidden":"true"},"#"),n(" 进制转换")],-1),y={class:"table-of-contents"},d=t(`<h2 id="_1-字符串转换" tabindex="-1"><a class="header-anchor" href="#_1-字符串转换" aria-hidden="true">#</a> 1. 字符串转换</h2><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"></span>
<span class="line"></span></code></pre></div><h2 id="_2-数组表示的任意进制" tabindex="-1"><a class="header-anchor" href="#_2-数组表示的任意进制" aria-hidden="true">#</a> 2. 数组表示的任意进制</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">convert_base</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">number</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">base</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">) -&gt; list[</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">]:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> number &lt; </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">or</span><span style="color:#D4D4D4;"> base &lt; </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">raise</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ValueError</span><span style="color:#D4D4D4;">(</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#CE9178;">&#39;&quot;number&quot; must be positive and &quot;base&quot; must be greater than 1&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">        )</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> number == </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">or</span><span style="color:#D4D4D4;"> base == </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> [number]</span></span>
<span class="line"><span style="color:#D4D4D4;">    res = []</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">while</span><span style="color:#D4D4D4;"> number != </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        number, mod = </span><span style="color:#DCDCAA;">divmod</span><span style="color:#D4D4D4;">(number, base)</span></span>
<span class="line"><span style="color:#D4D4D4;">        res.append(mod)</span></span>
<span class="line"><span style="color:#D4D4D4;">    res.reverse()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> res</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">from_list</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">l</span><span style="color:#D4D4D4;">: list[</span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">], </span><span style="color:#9CDCFE;">base</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">10</span><span style="color:#D4D4D4;">) -&gt; </span><span style="color:#4EC9B0;">int</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> base &lt; </span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">raise</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ValueError</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;&quot;base&quot; must be greater than 1&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    res = </span><span style="color:#B5CEA8;">0</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> x </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> l:</span></span>
<span class="line"><span style="color:#D4D4D4;">        res = res * base + x</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> res</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function u(C,v){const a=p("router-link");return r(),c("div",null,[i,s("nav",y,[s("ul",null,[s("li",null,[l(a,{to:"#_1-字符串转换"},{default:e(()=>[n("1. 字符串转换")]),_:1})]),s("li",null,[l(a,{to:"#_2-数组表示的任意进制"},{default:e(()=>[n("2. 数组表示的任意进制")]),_:1})])])]),d])}const m=o(D,[["render",u],["__file","decimal-conversion.html.vue"]]);export{m as default};

import{_ as c,M as p,p as i,q as l,R as n,N as s,V as e,t as a,a1 as u}from"./framework-31e2b6bb.js";const d={},r=n("h1",{id:"paramiko-优雅的-ssh-协议实现",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#paramiko-优雅的-ssh-协议实现","aria-hidden":"true"},"#"),a(" paramiko - 优雅的 SSH 协议实现")],-1),k={class:"no-link"},v={href:"https://pypi.org/project/paramiko/",target:"_blank",rel:"noopener noreferrer"},m=n("img",{src:"https://img.shields.io/pypi/v/paramiko",alt:"version",loading:"lazy"},null,-1),h={href:"https://pypi.org/project/paramiko/",target:"_blank",rel:"noopener noreferrer"},_=n("img",{src:"https://img.shields.io/pypi/pyversions/paramiko",alt:"python",loading:"lazy"},null,-1),b={href:"https://github.com/paramiko/paramiko/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"},g=n("img",{src:"https://img.shields.io/pypi/l/paramiko",alt:"license",loading:"lazy"},null,-1),y={href:"https://app.circleci.com/pipelines/github/paramiko/paramiko",target:"_blank",rel:"noopener noreferrer"},f=n("img",{src:"https://img.shields.io/circleci/build/github/paramiko/paramiko/main",alt:"ci",loading:"lazy"},null,-1),S={href:"https://app.codecov.io/gh/paramiko/paramiko",target:"_blank",rel:"noopener noreferrer"},w=n("img",{src:"https://img.shields.io/codecov/c/gh/paramiko/paramiko",alt:"coverage",loading:"lazy"},null,-1),P={class:"table-of-contents"},x=n("h2",{id:"_1-项目简介",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-项目简介","aria-hidden":"true"},"#"),a(" 1. 项目简介")],-1),C=n("thead",null,[n("tr",null,[n("th",null,"项目"),n("th",null,"信息")])],-1),T=n("td",null,"项目地址",-1),H={href:"https://pypi.org/project/paramiko/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/paramiko/paramiko",target:"_blank",rel:"noopener noreferrer"},F=n("td",null,"官方文档",-1),A={href:"http://paramiko.org/",target:"_blank",rel:"noopener noreferrer"},N=n("tr",null,[n("td",null,"开源协议"),n("td",null,"LGPL-2.1")],-1),j=n("tr",null,[n("td",null,"Python 版本"),n("td",null,"Python 3.7 ~ 3.11")],-1),K=n("tr",null,[n("td",null,"标签"),n("td",null,"工具")],-1),E=u(`<p>Paramiko 是 SSHv2 协议的纯 Python 实现，同时提供客户端和服务器功能。Paramiko 多用于客户端，并且多用于远程连接到 Linux 服务器，查看上面的日志状态，批量配置远程服务器，文件上传，文件下载等。</p><p>安装：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> paramiko
</code></pre></div><h2 id="_2-快速入门" tabindex="-1"><a class="header-anchor" href="#_2-快速入门" aria-hidden="true">#</a> 2. 快速入门</h2><p>Paramiko 是一个基于 SSH 用于连接远程服务器并执行相关操作（<code>SSHClient</code> 和 <code>SFTPClinet</code>，即一个是远程连接，一个是上传下载服务），使用该模块可以对远程服务器进行命令或文件操作，值得一说的是，Fabric 和 Ansible 内部的远程管理就是使用的 Paramiko 来实现的。</p><p>Paramiko 最常用的两个类为 <code>SSHClient</code> 类和 <code>SFTPClient</code> 类，分别提供 SSH 和 SFTP 功能。</p><p>核心 SSH 协议类：</p><ul><li><code>Channel</code>：是一种 <code>Socket</code>、安全的 SSH 传输通道</li><li><code>Client</code>：客户端的封装</li><li><code>Message</code>：包含向流中写入字节，提取字节等方法</li><li><code>Packetizer</code>：检查握手，获取 Channel ID 等方法</li><li><code>Transport</code>：是一种加密的会话，使用时会同步创建了一个加密的通道（即 <code>Tunnels</code>），这个通道叫做 <code>Channel</code>，此类包含公钥认证，打开 Channel 通道等方法</li></ul><p>秘钥相关类：</p><ul><li>SSH Agent 类：<code>Agent</code></li><li>Host Key 类：<code>HostKeys</code></li><li>Key handling 类 <ul><li><code>PKey</code></li><li><code>PublicBlob</code></li><li><code>DSSKey</code></li><li><code>RSAKey</code></li><li><code>ECDSAKey</code></li><li><code>Ed25519Key</code></li></ul></li></ul><p>GSS API 认证和秘钥交换：</p><ul><li><code>ssh_gss</code></li><li><code>kex_gss</code></li></ul><h2 id="_3-api-与示例" tabindex="-1"><a class="header-anchor" href="#_3-api-与示例" aria-hidden="true">#</a> 3. API 与示例</h2><h3 id="_3-1-sshclient-常用方法" tabindex="-1"><a class="header-anchor" href="#_3-1-sshclient-常用方法" aria-hidden="true">#</a> 3.1 SSHClient 常用方法</h3><p>下面是方法和参数含义：</p><table><thead><tr><th><code>connect()</code></th><th>实现远程服务器的连接与认证</th></tr></thead><tbody><tr><td><code>hostname</code></td><td>目标主机，必须字段</td></tr><tr><td><code>port=22</code></td><td>端口</td></tr><tr><td><code>username=None</code></td><td>验证的用户名</td></tr><tr><td><code>password=None</code></td><td>验证的用户密码</td></tr><tr><td><code>pkey=None</code></td><td>私钥方式用于身份验证</td></tr><tr><td><code>key_filename=None</code></td><td>一个文件名或文件列表，指定私钥文件</td></tr><tr><td><code>timeout=None</code></td><td>TCP 连接超时时间</td></tr><tr><td><code>allow_agent=True</code></td><td>是否允许连接到 SSH 代理，默认为允许</td></tr><tr><td><code>look_for_keys=True</code></td><td>是否在 <code>~/.ssh</code> 中搜索私钥文件</td></tr><tr><td><code>compress=False</code></td><td>是否打开压缩</td></tr></tbody></table><p>我们连接之前通常要设置远程服务器没有在 <code>know_hosts</code> 文件中记录时的策略，<code>SSHClient</code> 对象有一个方法 <code>set_missing_host_key_policy()</code> 就是用于设置缺失的策略。</p><table><thead><tr><th><code>set_missing_host_key_policy()</code></th><th>不存在记录时的策略</th></tr></thead><tbody><tr><td><code>policy</code></td><td>必须为下面所提供的策略</td></tr></tbody></table><p>有三种策略可用：</p><ol><li><code>paramiko.AutoAddPolicy</code> 自动添加主机名及主机密钥到本地 <code>HostKeys</code> 对象，不依赖 <code>load_system_host_key()</code> 的配置。即新建立 SSH 连接时不需要再输入 <code>&quot;yes&quot;</code> 或 <code>&quot;no&quot;</code> 进行确认</li><li><code>paramiko.WarningPolicy</code> 用于记录一个未知的主机密钥的 Python 警告。并接受，功能上和 <code>AutoAddPolicy</code> 类似，但是会提示是新连接</li><li><code>paramiko.RejectPolicy</code> 自动拒绝未知的主机名和密钥，依赖 <code>load_system_host_key()</code> 的配置。此为默认选项</li></ol><p>执行命令方法：</p><table><thead><tr><th><code>exec_command()</code></th><th>在远程服务器执行 Linux 命令的方法</th></tr></thead><tbody><tr><td><code>command</code></td><td>命令</td></tr><tr><td><code>bufsize=-1</code></td><td>缓冲区大小</td></tr><tr><td><code>timeout=None</code></td><td>超时时间</td></tr><tr><td><code>get_pty=False</code></td><td>请求一个伪终端</td></tr><tr><td><code>environment=None</code></td><td>给定一个环境变量字典</td></tr></tbody></table><p>创建 SFTP 方法 <code>open_sftp()</code>，在当前 SSH 会话的基础上创建一个 SFTP 会话。该方法会返回一个 <code>SFTPClient</code> 对象。</p><table><thead><tr><th><code>open_sftp()</code></th><th>创建 SFTP 方法</th></tr></thead></table><h3 id="_3-2-sshclient-示例" tabindex="-1"><a class="header-anchor" href="#_3-2-sshclient-示例" aria-hidden="true">#</a> 3.2 SSHClient 示例</h3><p>账号密码登录：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> paramiko

<span class="token comment"># 实例化 SSHClient</span>
ssh_client <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 自动添加策略</span>
ssh_client<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 连接 SSH 服务端，以用户名和密码进行认证，调用 connect() 方法连接服务器</span>
ssh_client<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>hostname<span class="token operator">=</span><span class="token string">&#39;192.168.137.105&#39;</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span>
                   username<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 打开一个 Channel 并执行命令</span>
stdin<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr <span class="token operator">=</span> ssh_client<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span><span class="token string">&#39;df -hT&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 关闭 SSHClient 连接</span>
ssh_client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>私钥登录：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> paramiko

<span class="token comment"># 配置私人密钥文件位置</span>
private <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>RSAKey<span class="token punctuation">.</span>from_private_key_file<span class="token punctuation">(</span><span class="token string">&#39;/root/.ssh/id_rsa&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 实例化 SSHClient</span>
ssh_client <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 自动添加策略</span>
ssh_client<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 连接 SSH 服务端，使用 RSA 认证</span>
ssh_client<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>
    hostname<span class="token operator">=</span><span class="token string">&#39;192.168.137.100&#39;</span><span class="token punctuation">,</span>
    port<span class="token operator">=</span><span class="token number">22</span><span class="token punctuation">,</span>
    username<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span>
    pkey<span class="token operator">=</span>private
<span class="token punctuation">)</span>
<span class="token comment"># 打开一个 Channel 并执行命令</span>
stdin<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr <span class="token operator">=</span> ssh_client<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span><span class="token string">&#39;df -hT&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 关闭 SSHClient 连接</span>
ssh_client<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-sftpclient-常用方法" tabindex="-1"><a class="header-anchor" href="#_3-3-sftpclient-常用方法" aria-hidden="true">#</a> 3.3 SFTPClient 常用方法</h3><p><code>SFTPCLient</code> 作为一个 SFTP 的客户端对象，根据 SSH 传输协议的 SFTP 会话，实现远程文件操作，如上传、下载、权限、状态。</p><table><thead><tr><th>常用方法</th><th>功能</th></tr></thead><tbody><tr><td><code>from_transport()</code></td><td>创建一个已连通的 SFTP 客户端通道</td></tr><tr><td><code>put()</code></td><td>将本地文件上传到服务器</td></tr><tr><td><code>get()</code></td><td>从服务器下载文件到本地</td></tr><tr><td><code>mkdir()</code></td><td>在服务器上创建目录</td></tr><tr><td><code>remove()</code></td><td>在服务器上删除目录</td></tr><tr><td><code>rename()</code></td><td>在服务器上重命名目录</td></tr><tr><td><code>stat()</code></td><td>查看服务器文件状态</td></tr><tr><td><code>listdir()</code></td><td>列出服务器目录下的文件</td></tr></tbody></table><h3 id="_3-4-sftpclient-示例" tabindex="-1"><a class="header-anchor" href="#_3-4-sftpclient-示例" aria-hidden="true">#</a> 3.4 SFTPClient 示例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> paramiko

<span class="token comment"># 实例化一个 Transport 对象</span>
tran <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>Transport<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token string">&#39;192.168.137.100&#39;</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment"># 连接 SSH 服务端，使用密码登录</span>
tran<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>username<span class="token operator">=</span><span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 获取 SFTP 实例</span>
sftp <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SFTPClient<span class="token punctuation">.</span>from_transport<span class="token punctuation">(</span>tran<span class="token punctuation">)</span>
<span class="token comment"># 设置上传的本地、远程文件路径</span>
local_path <span class="token operator">=</span> <span class="token string">&#39;/home/1.txt&#39;</span>
remote_path <span class="token operator">=</span> <span class="token string">&#39;/tmp/1.txt&#39;</span>
<span class="token comment"># 执行上传动作</span>
sftp<span class="token punctuation">.</span>put<span class="token punctuation">(</span>local_path<span class="token punctuation">,</span> remote_path<span class="token punctuation">)</span>
<span class="token comment"># 执行下载动作</span>
sftp<span class="token punctuation">.</span>get<span class="token punctuation">(</span>remote_path<span class="token punctuation">,</span> local_path<span class="token punctuation">)</span>
<span class="token comment"># 关闭 Transport 通道</span>
tran<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-示例代码" tabindex="-1"><a class="header-anchor" href="#_4-示例代码" aria-hidden="true">#</a> 4. 示例代码</h2><h3 id="_4-1-单台主机操作" tabindex="-1"><a class="header-anchor" href="#_4-1-单台主机操作" aria-hidden="true">#</a> 4.1 单台主机操作</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> paramiko

hostname <span class="token operator">=</span> <span class="token string">&#39;192.168.137.100&#39;</span>
host_port <span class="token operator">=</span> <span class="token number">22</span>
username <span class="token operator">=</span> <span class="token string">&#39;root&#39;</span>
password <span class="token operator">=</span> <span class="token string">&#39;123456&#39;</span>

<span class="token keyword">def</span> <span class="token function">ssh_client_con</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;创建 SSH 连接，并执行 Shell 命令
    &quot;&quot;&quot;</span>
    ssh_client <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ssh_client<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">)</span>

    ssh_client<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>
        port<span class="token operator">=</span>host_port<span class="token punctuation">,</span>
        hostname<span class="token operator">=</span>hostname<span class="token punctuation">,</span>
        username<span class="token operator">=</span>username<span class="token punctuation">,</span>
        password<span class="token operator">=</span>password
    <span class="token punctuation">)</span>

    shell_command <span class="token operator">=</span> <span class="token string">&#39;ps aux&#39;</span>
    stdin<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr <span class="token operator">=</span> ssh_client<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span>shell_command<span class="token punctuation">)</span>
    stdout_info <span class="token operator">=</span> stdout<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>stdout_info<span class="token punctuation">)</span>

    stderr_info <span class="token operator">=</span> stderr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>stderr_info<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">sftp_client_con</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;创建 SFTP 连接并上传文件
    &quot;&quot;&quot;</span>
    tran <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>Transport<span class="token punctuation">(</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> host_port<span class="token punctuation">)</span><span class="token punctuation">)</span>
    tran<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">)</span>
    sftp <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SFTPClient<span class="token punctuation">.</span>from_transport<span class="token punctuation">(</span>tran<span class="token punctuation">)</span>

    local_path <span class="token operator">=</span> <span class="token string">&#39;demo.jpg&#39;</span>
    remote_path <span class="token operator">=</span> <span class="token string">&#39;/home/333.jpg&#39;</span>
    put_info <span class="token operator">=</span> sftp<span class="token punctuation">.</span>put<span class="token punctuation">(</span>local_path<span class="token punctuation">,</span> remote_path<span class="token punctuation">,</span> confirm<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>put_info<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;上传完成&#39;</span><span class="token punctuation">)</span>

    save_path <span class="token operator">=</span> <span class="token string">&#39;7.jpg&#39;</span>
    sftp<span class="token punctuation">.</span>get<span class="token punctuation">(</span>remotepath<span class="token operator">=</span>remote_path<span class="token punctuation">,</span> localpath<span class="token operator">=</span>save_path<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;下载完成&#39;</span><span class="token punctuation">)</span>

    tran<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    ssh_client_con<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sftp_client_con<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-批量操作主机" tabindex="-1"><a class="header-anchor" href="#_4-2-批量操作主机" aria-hidden="true">#</a> 4.2 批量操作主机</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> paramiko

<span class="token keyword">def</span> <span class="token function">ssh_client_con</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;创建 SSH 连接，并执行 Shell 命令
    &quot;&quot;&quot;</span>
    ssh_client <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SSHClient<span class="token punctuation">(</span><span class="token punctuation">)</span>
    ssh_client<span class="token punctuation">.</span>set_missing_host_key_policy<span class="token punctuation">(</span>paramiko<span class="token punctuation">.</span>AutoAddPolicy<span class="token punctuation">)</span>

    ssh_client<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>
        port<span class="token operator">=</span>host_port<span class="token punctuation">,</span>
        hostname<span class="token operator">=</span>hostname<span class="token punctuation">,</span>
        username<span class="token operator">=</span>username<span class="token punctuation">,</span>
        password<span class="token operator">=</span>password
    <span class="token punctuation">)</span>

    shell_command <span class="token operator">=</span> <span class="token triple-quoted-string string">&#39;&#39;&#39;
    path = &#39;/tmp&#39;
    tree \${path}
    if [ $? -ne 0 ]
    then
        yum install -y tree
        tree \${path}
    fi
    &#39;&#39;&#39;</span>
    stdin<span class="token punctuation">,</span> stdout<span class="token punctuation">,</span> stderr <span class="token operator">=</span> ssh_client<span class="token punctuation">.</span>exec_command<span class="token punctuation">(</span>shell_command<span class="token punctuation">)</span>

    stdout_info <span class="token operator">=</span> stdout<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>stdout_info<span class="token punctuation">)</span>

    stderr_info <span class="token operator">=</span> stderr<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>stderr_info<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">sftp_client_con</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;创建 SFTP 连接并上传文件
    &quot;&quot;&quot;</span>
    tran <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>Transport<span class="token punctuation">(</span><span class="token punctuation">(</span>hostname<span class="token punctuation">,</span> host_port<span class="token punctuation">)</span><span class="token punctuation">)</span>
    tran<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>username<span class="token operator">=</span>username<span class="token punctuation">,</span> password<span class="token operator">=</span>password<span class="token punctuation">)</span>
    sftp <span class="token operator">=</span> paramiko<span class="token punctuation">.</span>SFTPClient<span class="token punctuation">.</span>from_transport<span class="token punctuation">(</span>tran<span class="token punctuation">)</span>

    local_path <span class="token operator">=</span> <span class="token string">&#39;demo.jpg&#39;</span>
    remote_path <span class="token operator">=</span> <span class="token string">&#39;/home/333.jpg&#39;</span>
    put_info <span class="token operator">=</span> sftp<span class="token punctuation">.</span>put<span class="token punctuation">(</span>local_path<span class="token punctuation">,</span> remote_path<span class="token punctuation">,</span> confirm<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>put_info<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;上传完成&#39;</span><span class="token punctuation">)</span>

    save_path <span class="token operator">=</span> <span class="token string">&#39;7.jpg&#39;</span>
    sftp<span class="token punctuation">.</span>get<span class="token punctuation">(</span>remotepath<span class="token operator">=</span>remote_path<span class="token punctuation">,</span> localpath<span class="token operator">=</span>save_path<span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;下载完成&#39;</span><span class="token punctuation">)</span>

    tran<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;host_site.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> host_file<span class="token punctuation">:</span>
        <span class="token keyword">for</span> host_info <span class="token keyword">in</span> host_file<span class="token punctuation">:</span>
            line <span class="token operator">=</span> host_info<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span>
            hostname<span class="token punctuation">,</span> host_port<span class="token punctuation">,</span> username<span class="token punctuation">,</span> password <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;[Info] </span><span class="token interpolation"><span class="token punctuation">{</span>hostname<span class="token punctuation">}</span></span><span class="token string"> 执行结果&#39;</span></span><span class="token punctuation">)</span>
            ssh_client_con<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">except</span> FileNotFoundError <span class="token keyword">as</span> file_error<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>file_error<span class="token punctuation">)</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>host_site.txt</code> 文件内容格式如下：主机地址、端口、用户、密码：</p><div class="language-csv" data-ext="csv"><pre class="language-csv"><code><span class="token value">192.168.137.100</span><span class="token punctuation">,</span><span class="token value">22</span><span class="token punctuation">,</span><span class="token value">root</span><span class="token punctuation">,</span><span class="token value">123456</span>
<span class="token value">192.168.137.101</span><span class="token punctuation">,</span><span class="token value">22</span><span class="token punctuation">,</span><span class="token value">root</span><span class="token punctuation">,</span><span class="token value">123456</span>
<span class="token value">192.168.137.102</span><span class="token punctuation">,</span><span class="token value">22</span><span class="token punctuation">,</span><span class="token value">root</span><span class="token punctuation">,</span><span class="token value">123456</span>
<span class="token value">192.168.137.103</span><span class="token punctuation">,</span><span class="token value">22</span><span class="token punctuation">,</span><span class="token value">root</span><span class="token punctuation">,</span><span class="token value">123456</span>
<span class="token value">192.168.137.104</span><span class="token punctuation">,</span><span class="token value">22</span><span class="token punctuation">,</span><span class="token value">root</span><span class="token punctuation">,</span><span class="token value">123456</span>
</code></pre></div>`,41);function I(L,z){const o=p("ExternalLinkIcon"),t=p("router-link");return i(),l("div",null,[r,n("div",k,[n("p",null,[n("a",v,[m,s(o)]),n("a",h,[_,s(o)]),n("a",b,[g,s(o)]),n("a",y,[f,s(o)]),n("a",S,[w,s(o)])])]),n("nav",P,[n("ul",null,[n("li",null,[s(t,{to:"#_1-项目简介"},{default:e(()=>[a("1. 项目简介")]),_:1})]),n("li",null,[s(t,{to:"#_2-快速入门"},{default:e(()=>[a("2. 快速入门")]),_:1})]),n("li",null,[s(t,{to:"#_3-api-与示例"},{default:e(()=>[a("3. API 与示例")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#_3-1-sshclient-常用方法"},{default:e(()=>[a("3.1 SSHClient 常用方法")]),_:1})]),n("li",null,[s(t,{to:"#_3-2-sshclient-示例"},{default:e(()=>[a("3.2 SSHClient 示例")]),_:1})]),n("li",null,[s(t,{to:"#_3-3-sftpclient-常用方法"},{default:e(()=>[a("3.3 SFTPClient 常用方法")]),_:1})]),n("li",null,[s(t,{to:"#_3-4-sftpclient-示例"},{default:e(()=>[a("3.4 SFTPClient 示例")]),_:1})])])]),n("li",null,[s(t,{to:"#_4-示例代码"},{default:e(()=>[a("4. 示例代码")]),_:1}),n("ul",null,[n("li",null,[s(t,{to:"#_4-1-单台主机操作"},{default:e(()=>[a("4.1 单台主机操作")]),_:1})]),n("li",null,[s(t,{to:"#_4-2-批量操作主机"},{default:e(()=>[a("4.2 批量操作主机")]),_:1})])])])])]),x,n("table",null,[C,n("tbody",null,[n("tr",null,[T,n("td",null,[n("a",H,[a("PyPI"),s(o)]),a(" | "),n("a",q,[a("GitHub"),s(o)])])]),n("tr",null,[F,n("td",null,[n("a",A,[a("paramiko.org"),s(o)])])]),N,j,K])]),E])}const V=c(d,[["render",I],["__file","paramiko.html.vue"]]);export{V as default};

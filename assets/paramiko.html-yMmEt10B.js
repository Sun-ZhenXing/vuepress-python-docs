import{_ as t,r as p,o as i,c,b as s,a as n,w as e,d as a,e as r}from"./app-VcvQJWSe.js";const d={},D=s("h1",{id:"paramiko---优雅的-ssh-协议实现",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#paramiko---优雅的-ssh-协议实现","aria-hidden":"true"},"#"),a(" paramiko - 优雅的 SSH 协议实现")],-1),y={class:"no-link"},u={href:"https://pypi.org/project/paramiko/",target:"_blank",rel:"noopener noreferrer"},v=s("img",{src:"https://img.shields.io/pypi/v/paramiko",alt:"version",loading:"lazy"},null,-1),m=s("br",null,null,-1),h={href:"https://pypi.org/project/paramiko/",target:"_blank",rel:"noopener noreferrer"},b=s("img",{src:"https://img.shields.io/pypi/pyversions/paramiko",alt:"python",loading:"lazy"},null,-1),C=s("br",null,null,-1),_={href:"https://github.com/paramiko/paramiko/blob/main/LICENSE",target:"_blank",rel:"noopener noreferrer"},E=s("img",{src:"https://img.shields.io/pypi/l/paramiko",alt:"license",loading:"lazy"},null,-1),f=s("br",null,null,-1),k={href:"https://app.circleci.com/pipelines/github/paramiko/paramiko",target:"_blank",rel:"noopener noreferrer"},S=s("img",{src:"https://img.shields.io/circleci/build/github/paramiko/paramiko/main",alt:"ci",loading:"lazy"},null,-1),A=s("br",null,null,-1),g={href:"https://app.codecov.io/gh/paramiko/paramiko",target:"_blank",rel:"noopener noreferrer"},F=s("img",{src:"https://img.shields.io/codecov/c/gh/paramiko/paramiko",alt:"coverage",loading:"lazy"},null,-1),x={class:"table-of-contents"},P=s("h2",{id:"1-项目简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#1-项目简介","aria-hidden":"true"},"#"),a(" 1. 项目简介")],-1),T=s("thead",null,[s("tr",null,[s("th",null,"项目"),s("th",null,"信息")])],-1),H=s("td",null,"项目地址",-1),q={href:"https://pypi.org/project/paramiko/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://github.com/paramiko/paramiko",target:"_blank",rel:"noopener noreferrer"},N=s("td",null,"官方文档",-1),B={href:"http://paramiko.org/",target:"_blank",rel:"noopener noreferrer"},j=s("tr",null,[s("td",null,"开源协议"),s("td",null,"LGPL-2.1")],-1),K=s("tr",null,[s("td",null,"Python 版本"),s("td",null,"Python 3.7 ~ 3.11")],-1),I=s("tr",null,[s("td",null,"标签"),s("td",null,"工具")],-1),L=r(`<p>Paramiko 是 SSHv2 协议的纯 Python 实现，同时提供客户端和服务器功能。Paramiko 多用于客户端，并且多用于远程连接到 Linux 服务器，查看上面的日志状态，批量配置远程服务器，文件上传，文件下载等。</p><p>安装：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">paramiko</span></span>
<span class="line"></span></code></pre></div><h2 id="2-快速入门" tabindex="-1"><a class="header-anchor" href="#2-快速入门" aria-hidden="true">#</a> 2. 快速入门</h2><p>Paramiko 是一个基于 SSH 用于连接远程服务器并执行相关操作（<code>SSHClient</code> 和 <code>SFTPClinet</code>，即一个是远程连接，一个是上传下载服务），使用该模块可以对远程服务器进行命令或文件操作，值得一说的是，Fabric 和 Ansible 内部的远程管理就是使用的 Paramiko 来实现的。</p><p>Paramiko 最常用的两个类为 <code>SSHClient</code> 类和 <code>SFTPClient</code> 类，分别提供 SSH 和 SFTP 功能。</p><p>核心 SSH 协议类：</p><ul><li><code>Channel</code>：是一种 <code>Socket</code>、安全的 SSH 传输通道</li><li><code>Client</code>：客户端的封装</li><li><code>Message</code>：包含向流中写入字节，提取字节等方法</li><li><code>Packetizer</code>：检查握手，获取 Channel ID 等方法</li><li><code>Transport</code>：是一种加密的会话，使用时会同步创建了一个加密的通道（即 <code>Tunnels</code>），这个通道叫做 <code>Channel</code>，此类包含公钥认证，打开 Channel 通道等方法</li></ul><p>秘钥相关类：</p><ul><li>SSH Agent 类：<code>Agent</code></li><li>Host Key 类：<code>HostKeys</code></li><li>Key handling 类 <ul><li><code>PKey</code></li><li><code>PublicBlob</code></li><li><code>DSSKey</code></li><li><code>RSAKey</code></li><li><code>ECDSAKey</code></li><li><code>Ed25519Key</code></li></ul></li></ul><p>GSS API 认证和秘钥交换：</p><ul><li><code>ssh_gss</code></li><li><code>kex_gss</code></li></ul><h2 id="3-api-与示例" tabindex="-1"><a class="header-anchor" href="#3-api-与示例" aria-hidden="true">#</a> 3. API 与示例</h2><h3 id="31-sshclient-常用方法" tabindex="-1"><a class="header-anchor" href="#31-sshclient-常用方法" aria-hidden="true">#</a> 3.1 SSHClient 常用方法</h3><p>下面是方法和参数含义：</p><table><thead><tr><th><code>connect()</code></th><th>实现远程服务器的连接与认证</th></tr></thead><tbody><tr><td><code>hostname</code></td><td>目标主机，必须字段</td></tr><tr><td><code>port=22</code></td><td>端口</td></tr><tr><td><code>username=None</code></td><td>验证的用户名</td></tr><tr><td><code>password=None</code></td><td>验证的用户密码</td></tr><tr><td><code>pkey=None</code></td><td>私钥方式用于身份验证</td></tr><tr><td><code>key_filename=None</code></td><td>一个文件名或文件列表，指定私钥文件</td></tr><tr><td><code>timeout=None</code></td><td>TCP 连接超时时间</td></tr><tr><td><code>allow_agent=True</code></td><td>是否允许连接到 SSH 代理，默认为允许</td></tr><tr><td><code>look_for_keys=True</code></td><td>是否在 <code>~/.ssh</code> 中搜索私钥文件</td></tr><tr><td><code>compress=False</code></td><td>是否打开压缩</td></tr></tbody></table><p>我们连接之前通常要设置远程服务器没有在 <code>know_hosts</code> 文件中记录时的策略，<code>SSHClient</code> 对象有一个方法 <code>set_missing_host_key_policy()</code> 就是用于设置缺失的策略。</p><table><thead><tr><th><code>set_missing_host_key_policy()</code></th><th>不存在记录时的策略</th></tr></thead><tbody><tr><td><code>policy</code></td><td>必须为下面所提供的策略</td></tr></tbody></table><p>有三种策略可用：</p><ol><li><code>paramiko.AutoAddPolicy</code> 自动添加主机名及主机密钥到本地 <code>HostKeys</code> 对象，不依赖 <code>load_system_host_key()</code> 的配置。即新建立 SSH 连接时不需要再输入 <code>&quot;yes&quot;</code> 或 <code>&quot;no&quot;</code> 进行确认</li><li><code>paramiko.WarningPolicy</code> 用于记录一个未知的主机密钥的 Python 警告。并接受，功能上和 <code>AutoAddPolicy</code> 类似，但是会提示是新连接</li><li><code>paramiko.RejectPolicy</code> 自动拒绝未知的主机名和密钥，依赖 <code>load_system_host_key()</code> 的配置。此为默认选项</li></ol><p>执行命令方法：</p><table><thead><tr><th><code>exec_command()</code></th><th>在远程服务器执行 Linux 命令的方法</th></tr></thead><tbody><tr><td><code>command</code></td><td>命令</td></tr><tr><td><code>bufsize=-1</code></td><td>缓冲区大小</td></tr><tr><td><code>timeout=None</code></td><td>超时时间</td></tr><tr><td><code>get_pty=False</code></td><td>请求一个伪终端</td></tr><tr><td><code>environment=None</code></td><td>给定一个环境变量字典</td></tr></tbody></table><p>创建 SFTP 方法 <code>open_sftp()</code>，在当前 SSH 会话的基础上创建一个 SFTP 会话。该方法会返回一个 <code>SFTPClient</code> 对象。</p><table><thead><tr><th><code>open_sftp()</code></th><th>创建 SFTP 方法</th></tr></thead></table><h3 id="32-sshclient-示例" tabindex="-1"><a class="header-anchor" href="#32-sshclient-示例" aria-hidden="true">#</a> 3.2 SSHClient 示例</h3><p>账号密码登录：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 实例化 SSHClient</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client = paramiko.SSHClient()</span></span>
<span class="line"><span style="color:#6A9955;"># 自动添加策略</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span></span>
<span class="line"><span style="color:#6A9955;"># 连接 SSH 服务端，以用户名和密码进行认证，调用 connect() 方法连接服务器</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client.connect(</span><span style="color:#9CDCFE;">hostname</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;192.168.137.105&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">port</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">22</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">                   </span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;root&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;123456&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 打开一个 Channel 并执行命令</span></span>
<span class="line"><span style="color:#D4D4D4;">stdin, stdout, stderr = ssh_client.exec_command(</span><span style="color:#CE9178;">&#39;df -hT&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 关闭 SSHClient 连接</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client.close()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>私钥登录：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 配置私人密钥文件位置</span></span>
<span class="line"><span style="color:#D4D4D4;">private = paramiko.RSAKey.from_private_key_file(</span><span style="color:#CE9178;">&#39;/root/.ssh/id_rsa&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 实例化 SSHClient</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client = paramiko.SSHClient()</span></span>
<span class="line"><span style="color:#6A9955;"># 自动添加策略</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span></span>
<span class="line"><span style="color:#6A9955;"># 连接 SSH 服务端，使用 RSA 认证</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client.connect(</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">hostname</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;192.168.137.100&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">port</span><span style="color:#D4D4D4;">=</span><span style="color:#B5CEA8;">22</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;root&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">pkey</span><span style="color:#D4D4D4;">=private</span></span>
<span class="line"><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 打开一个 Channel 并执行命令</span></span>
<span class="line"><span style="color:#D4D4D4;">stdin, stdout, stderr = ssh_client.exec_command(</span><span style="color:#CE9178;">&#39;df -hT&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 关闭 SSHClient 连接</span></span>
<span class="line"><span style="color:#D4D4D4;">ssh_client.close()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="33-sftpclient-常用方法" tabindex="-1"><a class="header-anchor" href="#33-sftpclient-常用方法" aria-hidden="true">#</a> 3.3 SFTPClient 常用方法</h3><p><code>SFTPCLient</code> 作为一个 SFTP 的客户端对象，根据 SSH 传输协议的 SFTP 会话，实现远程文件操作，如上传、下载、权限、状态。</p><table><thead><tr><th>常用方法</th><th>功能</th></tr></thead><tbody><tr><td><code>from_transport()</code></td><td>创建一个已连通的 SFTP 客户端通道</td></tr><tr><td><code>put()</code></td><td>将本地文件上传到服务器</td></tr><tr><td><code>get()</code></td><td>从服务器下载文件到本地</td></tr><tr><td><code>mkdir()</code></td><td>在服务器上创建目录</td></tr><tr><td><code>remove()</code></td><td>在服务器上删除目录</td></tr><tr><td><code>rename()</code></td><td>在服务器上重命名目录</td></tr><tr><td><code>stat()</code></td><td>查看服务器文件状态</td></tr><tr><td><code>listdir()</code></td><td>列出服务器目录下的文件</td></tr></tbody></table><h3 id="34-sftpclient-示例" tabindex="-1"><a class="header-anchor" href="#34-sftpclient-示例" aria-hidden="true">#</a> 3.4 SFTPClient 示例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 实例化一个 Transport 对象</span></span>
<span class="line"><span style="color:#D4D4D4;">tran = paramiko.Transport((</span><span style="color:#CE9178;">&#39;192.168.137.100&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">22</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"><span style="color:#6A9955;"># 连接 SSH 服务端，使用密码登录</span></span>
<span class="line"><span style="color:#D4D4D4;">tran.connect(</span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;root&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;123456&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#6A9955;"># 获取 SFTP 实例</span></span>
<span class="line"><span style="color:#D4D4D4;">sftp = paramiko.SFTPClient.from_transport(tran)</span></span>
<span class="line"><span style="color:#6A9955;"># 设置上传的本地、远程文件路径</span></span>
<span class="line"><span style="color:#D4D4D4;">local_path = </span><span style="color:#CE9178;">&#39;/home/1.txt&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">remote_path = </span><span style="color:#CE9178;">&#39;/tmp/1.txt&#39;</span></span>
<span class="line"><span style="color:#6A9955;"># 执行上传动作</span></span>
<span class="line"><span style="color:#D4D4D4;">sftp.put(local_path, remote_path)</span></span>
<span class="line"><span style="color:#6A9955;"># 执行下载动作</span></span>
<span class="line"><span style="color:#D4D4D4;">sftp.get(remote_path, local_path)</span></span>
<span class="line"><span style="color:#6A9955;"># 关闭 Transport 通道</span></span>
<span class="line"><span style="color:#D4D4D4;">tran.close()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="4-示例代码" tabindex="-1"><a class="header-anchor" href="#4-示例代码" aria-hidden="true">#</a> 4. 示例代码</h2><h3 id="41-单台主机操作" tabindex="-1"><a class="header-anchor" href="#41-单台主机操作" aria-hidden="true">#</a> 4.1 单台主机操作</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">hostname = </span><span style="color:#CE9178;">&#39;192.168.137.100&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">host_port = </span><span style="color:#B5CEA8;">22</span></span>
<span class="line"><span style="color:#D4D4D4;">username = </span><span style="color:#CE9178;">&#39;root&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">password = </span><span style="color:#CE9178;">&#39;123456&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">ssh_client_con</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;&quot;&quot;创建 SSH 连接，并执行 Shell 命令</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client = paramiko.SSHClient()</span></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client.connect(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">port</span><span style="color:#D4D4D4;">=host_port,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">hostname</span><span style="color:#D4D4D4;">=hostname,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=username,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=password</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    shell_command = </span><span style="color:#CE9178;">&#39;ps aux&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    stdin, stdout, stderr = ssh_client.exec_command(shell_command)</span></span>
<span class="line"><span style="color:#D4D4D4;">    stdout_info = stdout.read().decode(</span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(stdout_info)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    stderr_info = stderr.read().decode(</span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(stderr_info)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">sftp_client_con</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;&quot;&quot;创建 SFTP 连接并上传文件</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    tran = paramiko.Transport((hostname, host_port))</span></span>
<span class="line"><span style="color:#D4D4D4;">    tran.connect(</span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=username, </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=password)</span></span>
<span class="line"><span style="color:#D4D4D4;">    sftp = paramiko.SFTPClient.from_transport(tran)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    local_path = </span><span style="color:#CE9178;">&#39;demo.jpg&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    remote_path = </span><span style="color:#CE9178;">&#39;/home/333.jpg&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    put_info = sftp.put(local_path, remote_path, </span><span style="color:#9CDCFE;">confirm</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(put_info)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;上传完成&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    save_path = </span><span style="color:#CE9178;">&#39;7.jpg&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    sftp.get(</span><span style="color:#9CDCFE;">remotepath</span><span style="color:#D4D4D4;">=remote_path, </span><span style="color:#9CDCFE;">localpath</span><span style="color:#D4D4D4;">=save_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;下载完成&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    tran.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">__name__</span><span style="color:#D4D4D4;"> == </span><span style="color:#CE9178;">&#39;__main__&#39;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client_con()</span></span>
<span class="line"><span style="color:#D4D4D4;">    sftp_client_con()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="42-批量操作主机" tabindex="-1"><a class="header-anchor" href="#42-批量操作主机" aria-hidden="true">#</a> 4.2 批量操作主机</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> paramiko</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">ssh_client_con</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;&quot;&quot;创建 SSH 连接，并执行 Shell 命令</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client = paramiko.SSHClient()</span></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    ssh_client.connect(</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">port</span><span style="color:#D4D4D4;">=host_port,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">hostname</span><span style="color:#D4D4D4;">=hostname,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=username,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=password</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    shell_command = </span><span style="color:#CE9178;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#CE9178;">    path = &#39;/tmp&#39;</span></span>
<span class="line"><span style="color:#CE9178;">    tree $</span><span style="color:#569CD6;">{path}</span></span>
<span class="line"><span style="color:#CE9178;">    if [ $? -ne 0 ]</span></span>
<span class="line"><span style="color:#CE9178;">    then</span></span>
<span class="line"><span style="color:#CE9178;">        yum install -y tree</span></span>
<span class="line"><span style="color:#CE9178;">        tree $</span><span style="color:#569CD6;">{path}</span></span>
<span class="line"><span style="color:#CE9178;">    fi</span></span>
<span class="line"><span style="color:#CE9178;">    &#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    stdin, stdout, stderr = ssh_client.exec_command(shell_command)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    stdout_info = stdout.read().decode(</span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(stdout_info)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    stderr_info = stderr.read().decode(</span><span style="color:#CE9178;">&#39;utf8&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(stderr_info)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">sftp_client_con</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#CE9178;">&quot;&quot;&quot;创建 SFTP 连接并上传文件</span></span>
<span class="line"><span style="color:#CE9178;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">    tran = paramiko.Transport((hostname, host_port))</span></span>
<span class="line"><span style="color:#D4D4D4;">    tran.connect(</span><span style="color:#9CDCFE;">username</span><span style="color:#D4D4D4;">=username, </span><span style="color:#9CDCFE;">password</span><span style="color:#D4D4D4;">=password)</span></span>
<span class="line"><span style="color:#D4D4D4;">    sftp = paramiko.SFTPClient.from_transport(tran)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    local_path = </span><span style="color:#CE9178;">&#39;demo.jpg&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    remote_path = </span><span style="color:#CE9178;">&#39;/home/333.jpg&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    put_info = sftp.put(local_path, remote_path, </span><span style="color:#9CDCFE;">confirm</span><span style="color:#D4D4D4;">=</span><span style="color:#569CD6;">True</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(put_info)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;上传完成&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    save_path = </span><span style="color:#CE9178;">&#39;7.jpg&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">    sftp.get(</span><span style="color:#9CDCFE;">remotepath</span><span style="color:#D4D4D4;">=remote_path, </span><span style="color:#9CDCFE;">localpath</span><span style="color:#D4D4D4;">=save_path)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;下载完成&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    tran.close()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">try</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">with</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">open</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;host_site.txt&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;r&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">encoding</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&#39;utf-8&#39;</span><span style="color:#D4D4D4;">) </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> host_file:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> host_info </span><span style="color:#C586C0;">in</span><span style="color:#D4D4D4;"> host_file:</span></span>
<span class="line"><span style="color:#D4D4D4;">            line = host_info.strip(</span><span style="color:#CE9178;">&#39;</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            hostname, host_port, username, password = line.split(</span><span style="color:#CE9178;">&#39;,&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&#39;[Info] </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">hostname</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;"> 执行结果&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">            ssh_client_con()</span></span>
<span class="line"><span style="color:#C586C0;">except</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">FileNotFoundError</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> file_error:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(file_error)</span></span>
<span class="line"><span style="color:#C586C0;">except</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Exception</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> e:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(e)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 <code>host_site.txt</code> 文件内容格式如下：主机地址、端口、用户、密码：</p><div class="language-txt" data-ext="txt"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">192.168.137.100,22,root,123456</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.137.101,22,root,123456</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.137.102,22,root,123456</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.137.103,22,root,123456</span></span>
<span class="line"><span style="color:#D4D4D4;">192.168.137.104,22,root,123456</span></span>
<span class="line"><span style="color:#D4D4D4;"></span></span></code></pre></div>`,41);function z(R,V){const o=p("ExternalLinkIcon"),l=p("router-link");return i(),c("div",null,[D,s("div",y,[s("p",null,[s("a",u,[v,n(o)]),m,s("a",h,[b,n(o)]),C,s("a",_,[E,n(o)]),f,s("a",k,[S,n(o)]),A,s("a",g,[F,n(o)])])]),s("nav",x,[s("ul",null,[s("li",null,[n(l,{to:"#1-项目简介"},{default:e(()=>[a("1. 项目简介")]),_:1})]),s("li",null,[n(l,{to:"#2-快速入门"},{default:e(()=>[a("2. 快速入门")]),_:1})]),s("li",null,[n(l,{to:"#3-api-与示例"},{default:e(()=>[a("3. API 与示例")]),_:1}),s("ul",null,[s("li",null,[n(l,{to:"#31-sshclient-常用方法"},{default:e(()=>[a("3.1 SSHClient 常用方法")]),_:1})]),s("li",null,[n(l,{to:"#32-sshclient-示例"},{default:e(()=>[a("3.2 SSHClient 示例")]),_:1})]),s("li",null,[n(l,{to:"#33-sftpclient-常用方法"},{default:e(()=>[a("3.3 SFTPClient 常用方法")]),_:1})]),s("li",null,[n(l,{to:"#34-sftpclient-示例"},{default:e(()=>[a("3.4 SFTPClient 示例")]),_:1})])])]),s("li",null,[n(l,{to:"#4-示例代码"},{default:e(()=>[a("4. 示例代码")]),_:1}),s("ul",null,[s("li",null,[n(l,{to:"#41-单台主机操作"},{default:e(()=>[a("4.1 单台主机操作")]),_:1})]),s("li",null,[n(l,{to:"#42-批量操作主机"},{default:e(()=>[a("4.2 批量操作主机")]),_:1})])])])])]),P,s("table",null,[T,s("tbody",null,[s("tr",null,[H,s("td",null,[s("a",q,[a("PyPI"),n(o)]),a(" | "),s("a",w,[a("GitHub"),n(o)])])]),s("tr",null,[N,s("td",null,[s("a",B,[a("paramiko.org"),n(o)])])]),j,K,I])]),L])}const $=t(d,[["render",z],["__file","paramiko.html.vue"]]);export{$ as default};

import{_ as r,r as o,o as p,c,b as s,a,w as t,d as n,e as i}from"./app-d1290edd.js";const d={},D=s("h1",{id:"parso-python-全版本解析器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#parso-python-全版本解析器","aria-hidden":"true"},"#"),n(" parso - Python 全版本解析器")],-1),h={class:"no-link"},u={href:"https://github.com/davidhalter/parso/actions",target:"_blank",rel:"noopener noreferrer"},y=s("img",{src:"https://github.com/davidhalter/parso/workflows/Build/badge.svg?branch=master",alt:"",loading:"lazy"},null,-1),_=s("br",null,null,-1),g={href:"https://coveralls.io/github/davidhalter/parso?branch=master",target:"_blank",rel:"noopener noreferrer"},m=s("img",{src:"https://coveralls.io/repos/github/davidhalter/parso/badge.svg?branch=master",alt:"",loading:"lazy"},null,-1),b=s("br",null,null,-1),v={href:"https://pepy.tech/project/parso",target:"_blank",rel:"noopener noreferrer"},E=s("img",{src:"https://pepy.tech/badge/parso",alt:"",loading:"lazy"},null,-1),C={class:"table-of-contents"},f=s("h2",{id:"_1-项目简介",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-项目简介","aria-hidden":"true"},"#"),n(" 1. 项目简介")],-1),k=s("thead",null,[s("tr",null,[s("th",null,"项目"),s("th",null,"信息")])],-1),x=s("td",null,"项目地址",-1),A={href:"https://pypi.org/project/parso/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/davidhalter/parso",target:"_blank",rel:"noopener noreferrer"},P=s("td",null,"官方文档",-1),N={href:"https://parso.readthedocs.org/en/latest/",target:"_blank",rel:"noopener noreferrer"},q=s("tr",null,[s("td",null,"开源协议"),s("td",null,"MIT")],-1),I=s("tr",null,[s("td",null,"Python 版本"),s("td",null,"Python 3.6 ~ 3.11")],-1),j=s("tr",null,[s("td",null,"标签"),s("td",null,"compiler")],-1),w=s("p",null,"Parso 是一个 Python 解析器，支持错误恢复和不同 Python 版本。Parso 还能够列出你的 Python 文件中的多个语法错误。",-1),V=s("p",null,"Parso 由很少的 API 组成，用来解析 Python 的分析语法树并查找尽可能多的错误。",-1),z={href:"https://github.com/davidhalter/jedi",target:"_blank",rel:"noopener noreferrer"},S=s("code",null,"jedi",-1),L=i(`<p>安装非常简单：</p><div class="language-bash" data-ext="sh"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pip</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">install</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">parso</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h2><p>解析语法树：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; </span><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> parso</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; module = parso.parse(</span><span style="color:#CE9178;">&#39;hello + 1&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">version</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;3.9&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; expr = module.children[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; expr</span></span>
<span class="line"><span style="color:#D4D4D4;">PythonNode(arith_expr, [&lt;Name: hello@</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">&gt;, &lt;Operator: +&gt;, &lt;Number: </span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">&gt;])</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(expr.get_code())</span></span>
<span class="line"><span style="color:#D4D4D4;">hello + </span><span style="color:#B5CEA8;">1</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; name = expr.children[</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">]</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; name</span></span>
<span class="line"><span style="color:#D4D4D4;">&lt;Name: hello@</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">,</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; name.end_pos</span></span>
<span class="line"><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; expr.end_pos</span></span>
<span class="line"><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析错误：</p><div class="language-python" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; grammar = parso.load_grammar()</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; module = grammar.parse(</span><span style="color:#CE9178;">&#39;foo +</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">bar</span><span style="color:#D7BA7D;">\\n</span><span style="color:#CE9178;">continue&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; error1, error2 = grammar.iter_errors(module)</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; error1.message</span></span>
<span class="line"><span style="color:#CE9178;">&#39;SyntaxError: invalid syntax&#39;</span></span>
<span class="line"><span style="color:#D4D4D4;">&gt;&gt;&gt; error2.message</span></span>
<span class="line"><span style="color:#CE9178;">&quot;SyntaxError: &#39;continue&#39; not properly in loop&quot;</span></span>
<span class="line"></span></code></pre></div>`,7);function T(F,G){const l=o("ExternalLinkIcon"),e=o("router-link");return p(),c("div",null,[D,s("div",h,[s("p",null,[s("a",u,[y,a(l)]),_,s("a",g,[m,a(l)]),b,s("a",v,[E,a(l)])])]),s("nav",C,[s("ul",null,[s("li",null,[a(e,{to:"#_1-项目简介"},{default:t(()=>[n("1. 项目简介")]),_:1})]),s("li",null,[a(e,{to:"#_2-示例"},{default:t(()=>[n("2. 示例")]),_:1})])])]),f,s("table",null,[k,s("tbody",null,[s("tr",null,[x,s("td",null,[s("a",A,[n("PyPI"),a(l)]),n(" | "),s("a",B,[n("GitHub"),a(l)])])]),s("tr",null,[P,s("td",null,[s("a",N,[n("parso.readthedocs.org"),a(l)])])]),q,I,j])]),w,V,s("blockquote",null,[s("p",null,[n("智能语法工具 "),s("a",z,[S,a(l)]),n(" 就是由 Parso 构建的。")])]),L])}const M=r(d,[["render",T],["__file","parso.html.vue"]]);export{M as default};

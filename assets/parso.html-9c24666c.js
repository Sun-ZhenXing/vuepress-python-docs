import{_ as r,M as p,p as l,q as c,R as n,N as s,V as e,t as a,a1 as i}from"./framework-bafc524a.js";const u={},k=n("h1",{id:"parso-python-全版本解析器",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#parso-python-全版本解析器","aria-hidden":"true"},"#"),a(" parso Python 全版本解析器")],-1),d={class:"table-of-contents"},g=n("h2",{id:"_1-parso-介绍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-parso-介绍","aria-hidden":"true"},"#"),a(" 1. parso 介绍")],-1),h={class:"no-link"},m={href:"https://github.com/davidhalter/parso/actions",target:"_blank",rel:"noopener noreferrer"},_=n("img",{src:"https://github.com/davidhalter/parso/workflows/Build/badge.svg?branch=master",alt:"",loading:"lazy"},null,-1),b={href:"https://coveralls.io/github/davidhalter/parso?branch=master",target:"_blank",rel:"noopener noreferrer"},v=n("img",{src:"https://coveralls.io/repos/github/davidhalter/parso/badge.svg?branch=master",alt:"",loading:"lazy"},null,-1),y={href:"https://pepy.tech/project/parso",target:"_blank",rel:"noopener noreferrer"},f=n("img",{src:"https://pepy.tech/badge/parso",alt:"",loading:"lazy"},null,-1),x=n("p",null,"Parso 是一个 Python 解析器，支持错误恢复和不同 Python 版本。Parso 还能够列出你的 Python 文件中的多个语法错误。",-1),P=n("p",null,"Parso 由很少的 API 组成，用来解析 Python 的分析语法树并查找尽可能多的错误。",-1),N={href:"https://github.com/davidhalter/jedi",target:"_blank",rel:"noopener noreferrer"},q=n("code",null,"jedi",-1),w=i(`<p>安装非常简单：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> parso
</code></pre></div><h2 id="_2-示例" tabindex="-1"><a class="header-anchor" href="#_2-示例" aria-hidden="true">#</a> 2. 示例</h2><p>解析语法树：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">import</span> parso
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> module <span class="token operator">=</span> parso<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">&#39;hello + 1&#39;</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token string">&quot;3.9&quot;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> expr <span class="token operator">=</span> module<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> expr
PythonNode<span class="token punctuation">(</span>arith_expr<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>Name<span class="token punctuation">:</span> hello@<span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Operator<span class="token punctuation">:</span> <span class="token operator">+</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">&lt;</span>Number<span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span>expr<span class="token punctuation">.</span>get_code<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
hello <span class="token operator">+</span> <span class="token number">1</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name <span class="token operator">=</span> expr<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name
<span class="token operator">&lt;</span>Name<span class="token punctuation">:</span> hello@<span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token operator">&gt;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> name<span class="token punctuation">.</span>end_pos
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> expr<span class="token punctuation">.</span>end_pos
<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析错误：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> grammar <span class="token operator">=</span> parso<span class="token punctuation">.</span>load_grammar<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> module <span class="token operator">=</span> grammar<span class="token punctuation">.</span>parse<span class="token punctuation">(</span><span class="token string">&#39;foo +\\nbar\\ncontinue&#39;</span><span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> error1<span class="token punctuation">,</span> error2 <span class="token operator">=</span> grammar<span class="token punctuation">.</span>iter_errors<span class="token punctuation">(</span>module<span class="token punctuation">)</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> error1<span class="token punctuation">.</span>message
<span class="token string">&#39;SyntaxError: invalid syntax&#39;</span>
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> error2<span class="token punctuation">.</span>message
<span class="token string">&quot;SyntaxError: &#39;continue&#39; not properly in loop&quot;</span>
</code></pre></div>`,7);function E(V,B){const o=p("router-link"),t=p("ExternalLinkIcon");return l(),c("div",null,[k,n("nav",d,[n("ul",null,[n("li",null,[s(o,{to:"#_1-parso-介绍"},{default:e(()=>[a("1. parso 介绍")]),_:1})]),n("li",null,[s(o,{to:"#_2-示例"},{default:e(()=>[a("2. 示例")]),_:1})])])]),g,n("div",h,[n("p",null,[n("a",m,[_,s(t)]),n("a",b,[v,s(t)]),n("a",y,[f,s(t)])])]),x,P,n("blockquote",null,[n("p",null,[a("智能语法工具 "),n("a",N,[q,s(t)]),a(" 就是由 Parso 构建。")])]),w])}const z=r(u,[["render",E],["__file","parso.html.vue"]]);export{z as default};

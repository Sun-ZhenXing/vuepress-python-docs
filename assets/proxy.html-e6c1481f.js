import{_ as d,r as c,o as D,c as y,b as s,a as o,w as a,d as l,e as i}from"./app-72efa82c.js";const u={},h=s("h1",{id:"pip-使用代理",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pip-使用代理","aria-hidden":"true"},"#"),l(" pip 使用代理")],-1),_={class:"table-of-contents"},C=i(`<h2 id="方法-1使用系统代理" tabindex="-1"><a class="header-anchor" href="#方法-1使用系统代理" aria-hidden="true">#</a> 方法 1：使用系统代理</h2><p>不推荐使用系统代理直接安装，因为在以前的 Python 中获取代理时不能识别 HTTPS 代理，或者没有正确的证书导致 SSL 错误。</p><p>通过下面的代码查看系统代理的差异，您可能在一些爬虫任务中需要解决代理问题：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> sys</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> urllib.request</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">get_sys_proxies</span><span style="color:#D4D4D4;">():</span></span>
<span class="line"><span style="color:#D4D4D4;">    proxies = urllib.request.getproxies()</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> sys.platform == </span><span style="color:#CE9178;">&#39;win32&#39;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;https&#39;</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">in</span><span style="color:#D4D4D4;"> proxies:</span></span>
<span class="line"><span style="color:#D4D4D4;">            proxies[</span><span style="color:#CE9178;">&#39;https&#39;</span><span style="color:#D4D4D4;">] = proxies[</span><span style="color:#CE9178;">&#39;https&#39;</span><span style="color:#D4D4D4;">].replace(</span><span style="color:#CE9178;">&#39;https://&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;http://&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> proxies</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">__name__</span><span style="color:#D4D4D4;"> == </span><span style="color:#CE9178;">&#39;__main__&#39;</span><span style="color:#D4D4D4;">:</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(urllib.request.getproxies())</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(get_sys_proxies())</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v={href:"https://pip.pypa.io/en/stable/topics/https-certificates/",target:"_blank",rel:"noopener noreferrer"},b=i('<h2 id="方法-2指定变量" tabindex="-1"><a class="header-anchor" href="#方法-2指定变量" aria-hidden="true">#</a> 方法 2：指定变量</h2><p>指定 <code>http_proxy</code> 和 <code>https_proxy</code> 变量。其值需要为 <code>scheme://[user:passwd@]proxy.server:port</code> 格式。</p><div class="hint-container warning"><p class="hint-container-title">SOCKS 协议</p><p>需要注意的是，SOCKS 协议的格式 <code>socks://</code> 可能不能被识别，可以写为 <code>socks5://</code>，因为当前版本的 Python 不能识别 SOCKS 协议的版本，而普遍使用的 SOCKS 协议是版本 5。</p></div><p>示例：</p>',4),x=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"export"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#9CDCFE"}},"https_proxy"),s("span",{style:{color:"#D4D4D4"}},"="),s("span",{style:{color:"#CE9178"}},"'socks5://127.0.0.1:10808'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#569CD6"}},"export"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#9CDCFE"}},"http_proxy"),s("span",{style:{color:"#D4D4D4"}},"="),s("span",{style:{color:"#CE9178"}},"'http://127.0.0.1:10809'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955"}},"# pip3 install ...")]),l(`
`),s("span",{class:"line"})])])],-1),E=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"set"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"https_proxy=socks5://127.0.0.1:10808")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"set"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"http_proxy=http://127.0.0.1:10809")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#6A9955"}},"# pip install ...")]),l(`
`),s("span",{class:"line"})])])],-1),k=s("p",null,"如果当前系统没有 SOCKS 协议支持，可以安装其支持包：",-1),m=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"pip3"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"install"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"pysocks")]),l(`
`),s("span",{class:"line"})])])],-1),A=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"pip"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"install"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"pysocks")]),l(`
`),s("span",{class:"line"})])])],-1),g=s("h2",{id:"方法-3使用命令行参数",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#方法-3使用命令行参数","aria-hidden":"true"},"#"),l(" 方法 3：使用命令行参数")],-1),f=s("p",null,[l("使用 "),s("code",null,"pip"),l(" 时指定 "),s("code",null,"--proxy"),l(" 可指定代理，规则和方法 1 一致，需要符合 "),s("code",null,"scheme://[user:passwd@]proxy.server:port"),l(" 格式。")],-1),S=s("p",null,"例如：",-1),w=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"pip3"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"install"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"opencv-python"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"--proxy"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"socks5://127.0.0.1:10808")]),l(`
`),s("span",{class:"line"})])])],-1),L=s("div",{class:"language-bash","data-ext":"sh"},[s("pre",{class:"shiki dark-plus",style:{"background-color":"#1E1E1E"},tabindex:"0"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#DCDCAA"}},"pip"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"install"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"opencv-python"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#569CD6"}},"--proxy"),s("span",{style:{color:"#D4D4D4"}}," "),s("span",{style:{color:"#CE9178"}},"socks5://127.0.0.1:10808")]),l(`
`),s("span",{class:"line"})])])],-1);function T(M,W){const t=c("router-link"),r=c("ExternalLinkIcon"),p=c("CodeTabs");return D(),y("div",null,[h,s("nav",_,[s("ul",null,[s("li",null,[o(t,{to:"#方法-1使用系统代理"},{default:a(()=>[l("方法 1：使用系统代理")]),_:1})]),s("li",null,[o(t,{to:"#方法-2指定变量"},{default:a(()=>[l("方法 2：指定变量")]),_:1})]),s("li",null,[o(t,{to:"#方法-3使用命令行参数"},{default:a(()=>[l("方法 3：使用命令行参数")]),_:1})])])]),C,s("p",null,[l("如果您需要使用这种方法，请查看 "),s("a",v,[l("pip: HTTPS Certificates"),o(r)]),l(" 了解更多。")]),b,o(p,{id:"33",data:[{id:"Linux/Mac"},{id:"Windows"}],"tab-id":"sys"},{title0:a(({value:n,isActive:e})=>[l("Linux/Mac")]),title1:a(({value:n,isActive:e})=>[l("Windows")]),tab0:a(({value:n,isActive:e})=>[x]),tab1:a(({value:n,isActive:e})=>[E]),_:1}),k,o(p,{id:"44",data:[{id:"Linux/Mac"},{id:"Windows"}],"tab-id":"sys"},{title0:a(({value:n,isActive:e})=>[l("Linux/Mac")]),title1:a(({value:n,isActive:e})=>[l("Windows")]),tab0:a(({value:n,isActive:e})=>[m]),tab1:a(({value:n,isActive:e})=>[A]),_:1}),g,f,S,o(p,{id:"61",data:[{id:"Linux/Mac"},{id:"Windows"}],"tab-id":"sys"},{title0:a(({value:n,isActive:e})=>[l("Linux/Mac")]),title1:a(({value:n,isActive:e})=>[l("Windows")]),tab0:a(({value:n,isActive:e})=>[w]),tab1:a(({value:n,isActive:e})=>[L]),_:1})])}const O=d(u,[["render",T],["__file","proxy.html.vue"]]);export{O as default};

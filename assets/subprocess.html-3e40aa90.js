import{_ as c,r as e,o as t,c as r,b as s,a,w as l,d as n,e as D}from"./app-9f19ef42.js";const i={},d=s("h1",{id:"创建异步子进程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#创建异步子进程","aria-hidden":"true"},"#"),n(" 创建异步子进程")],-1),y={class:"table-of-contents"},u=D(`<h2 id="_1-发起异步进程" tabindex="-1"><a class="header-anchor" href="#_1-发起异步进程" aria-hidden="true">#</a> 1. 发起异步进程</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> asyncio</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">run</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">cmd</span><span style="color:#D4D4D4;">: </span><span style="color:#4EC9B0;">str</span><span style="color:#D4D4D4;"> | </span><span style="color:#4EC9B0;">bytes</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    proc = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> asyncio.create_subprocess_shell(</span></span>
<span class="line"><span style="color:#D4D4D4;">        cmd,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">stdout</span><span style="color:#D4D4D4;">=asyncio.subprocess.PIPE,</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">stderr</span><span style="color:#D4D4D4;">=asyncio.subprocess.PIPE,</span></span>
<span class="line"><span style="color:#D4D4D4;">    )</span></span>
<span class="line"><span style="color:#D4D4D4;">    stdout, stderr = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> proc.communicate()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">cmd</span><span style="color:#569CD6;">!r}</span><span style="color:#CE9178;"> exited with </span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">proc.returncode</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> stdout:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;[stdout]</span><span style="color:#D7BA7D;">\\n</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">stdout.decode()</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">if</span><span style="color:#D4D4D4;"> stderr:</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#DCDCAA;">print</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">f</span><span style="color:#CE9178;">&quot;[stderr]</span><span style="color:#D7BA7D;">\\n</span><span style="color:#569CD6;">{</span><span style="color:#D4D4D4;">stderr.decode()</span><span style="color:#569CD6;">}</span><span style="color:#CE9178;">&quot;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">asyncio.run(run(</span><span style="color:#CE9178;">&quot;ls /&quot;</span><span style="color:#D4D4D4;">))</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-windows-下的限制" tabindex="-1"><a class="header-anchor" href="#_2-windows-下的限制" aria-hidden="true">#</a> 2. Windows 下的限制</h2>`,3),C=s("code",null,"ProactorEventLoop",-1),v=s("code",null,"ProactorEventLoop",-1);function _(m,b){const o=e("router-link"),p=e("Badge");return t(),r("div",null,[d,s("nav",y,[s("ul",null,[s("li",null,[a(o,{to:"#_1-发起异步进程"},{default:l(()=>[n("1. 发起异步进程")]),_:1})]),s("li",null,[a(o,{to:"#_2-windows-下的限制"},{default:l(()=>[n("2. Windows 下的限制")]),_:1})])])]),u,s("p",null,[a(p,{type:"danger"},{default:l(()=>[n("TODO")]),_:1}),n(" Windows 只有 "),C,n(" 支持异步子进程，但是许多库都不支持 "),v,n("，所以 Windows 下的异步子进程支持不好。")])])}const E=c(i,[["render",_],["__file","subprocess.html.vue"]]);export{E as default};

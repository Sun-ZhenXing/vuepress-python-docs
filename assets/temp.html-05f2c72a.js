import{_ as e,r as n,o as i,c,b as s,a as t,w as p,d as a,e as o}from"./app-9f19ef42.js";const d={},r=s("h1",{id:"临时计划",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#临时计划","aria-hidden":"true"},"#"),a(" 临时计划")],-1),b=o(`<ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> Python 构建插件系统</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-1" disabled="disabled"><label class="task-list-item-label" for="task-item-1"> 各种不同的 Python 虚拟环境方案</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-2" disabled="disabled"><label class="task-list-item-label" for="task-item-2"> Python + WebAssembly</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-3" disabled="disabled"><label class="task-list-item-label" for="task-item-3"> 构建周期性任务调度框架</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-4" disabled="disabled"><label class="task-list-item-label" for="task-item-4"> 构建视频处理框架</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-5" disabled="disabled"><label class="task-list-item-label" for="task-item-5"> 构建原子化图片处理框架</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-6" disabled="disabled"><label class="task-list-item-label" for="task-item-6"> 使用 <code>TypedDict</code> 构造类型字典</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-7" disabled="disabled"><label class="task-list-item-label" for="task-item-7"> 如何构建像 SymPy 一样的代数系统</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-8" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-8"> 从零构建 JS 逆向工具，通过网站验签 <em><strong>此项目加入爬虫计划</strong></em></label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-9" disabled="disabled"><label class="task-list-item-label" for="task-item-9"> PySide6: 添加笔记：Tree/Table 扩展最后一行/列</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-10" disabled="disabled"><label class="task-list-item-label" for="task-item-10"> Celery：Python 异步任务调度</label></li><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-11" disabled="disabled"><label class="task-list-item-label" for="task-item-11"> Rocketry：Python 下的轻量调度框架</label></li></ul><h2 id="opencv-增加图像对比度" tabindex="-1"><a class="header-anchor" href="#opencv-增加图像对比度" aria-hidden="true">#</a> OpenCV 增加图像对比度</h2><p>当使用Python和OpenCV增加图像的对比度时，可以使用<code>cv2.convertScaleAbs()</code>函数。该函数可以根据给定的对比度参数对图像进行线性变换。下面是一个详细的代码示例：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> cv2</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> numpy </span><span style="color:#C586C0;">as</span><span style="color:#D4D4D4;"> np</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">def</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">increase_contrast</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">image</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">alpha</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">beta</span><span style="color:#D4D4D4;">):</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 创建一个具有相同形状和数据类型的零矩阵</span></span>
<span class="line"><span style="color:#D4D4D4;">    adjusted_image = np.zeros_like(image)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 对图像进行线性变换</span></span>
<span class="line"><span style="color:#D4D4D4;">    adjusted_image = cv2.convertScaleAbs(image, adjusted_image, alpha, beta)</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> adjusted_image</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 读取图像</span></span>
<span class="line"><span style="color:#D4D4D4;">image = cv2.imread(</span><span style="color:#CE9178;">&#39;input.jpg&#39;</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 设置对比度增益参数</span></span>
<span class="line"><span style="color:#D4D4D4;">alpha = </span><span style="color:#B5CEA8;">1.5</span><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;"># 对比度增益</span></span>
<span class="line"><span style="color:#D4D4D4;">beta = </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">    </span><span style="color:#6A9955;"># 亮度增益</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 增加对比度</span></span>
<span class="line"><span style="color:#D4D4D4;">adjusted_image = increase_contrast(image, alpha, beta)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 显示原始图像和增加对比度后的图像</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;Original Image&#39;</span><span style="color:#D4D4D4;">, image)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.imshow(</span><span style="color:#CE9178;">&#39;Adjusted Image&#39;</span><span style="color:#D4D4D4;">, adjusted_image)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.waitKey(</span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;">)</span></span>
<span class="line"><span style="color:#D4D4D4;">cv2.destroyAllWindows()</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码中，<code>increase_contrast()</code>函数接受输入图像、对比度增益参数<code>alpha</code>和亮度增益参数<code>beta</code>。它创建一个与输入图像具有相同形状和数据类型的零矩阵<code>adjusted_image</code>，然后使用<code>cv2.convertScaleAbs()</code>函数对图像进行线性变换。最后，通过使用<code>cv2.imshow()</code>函数显示原始图像和增加对比度后的图像。</p><p>请注意，<code>alpha</code>参数用于控制对比度的增益，取值范围为大于0的浮点数。<code>beta</code>参数用于控制亮度的增益，取值范围为整数。根据具体需求，你可以调整这些参数的值以获得所需的效果。</p><h2 id="env-会在多阶段中共享吗" tabindex="-1"><a class="header-anchor" href="#env-会在多阶段中共享吗" aria-hidden="true">#</a> ENV 会在多阶段中共享吗</h2><p>在Docker多阶段构建中，使用<code>ENV</code>指令设置的环境变量在多个构建阶段之间是不共享的。每个构建阶段都有自己的环境，并且<code>ENV</code>指令在每个阶段都会创建一个新的环境变量。</p><p>这意味着，在一个构建阶段中设置的环境变量在另一个构建阶段中是不可见的。当一个构建阶段结束时，该阶段设置的环境变量将不会传递到下一个构建阶段。</p><p>以下是一个示例的Dockerfile，演示了多阶段构建中的环境变量的作用范围：</p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#6A9955;"># 第一个构建阶段</span></span>
<span class="line"><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> python:3.9 </span><span style="color:#569CD6;">AS</span><span style="color:#D4D4D4;"> builder</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 设置环境变量</span></span>
<span class="line"><span style="color:#569CD6;">ENV</span><span style="color:#D4D4D4;"> MY_VAR=</span><span style="color:#CE9178;">&quot;Hello from Builder&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 执行构建阶段的操作</span></span>
<span class="line"><span style="color:#569CD6;">RUN</span><span style="color:#D4D4D4;"> echo $MY_VAR</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 第二个构建阶段</span></span>
<span class="line"><span style="color:#569CD6;">FROM</span><span style="color:#D4D4D4;"> python:3.9 </span><span style="color:#569CD6;">AS</span><span style="color:#D4D4D4;"> final</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 从第一个阶段复制文件和环境变量</span></span>
<span class="line"><span style="color:#569CD6;">COPY</span><span style="color:#D4D4D4;"> --from=builder /app /app</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;"># 这里的环境变量是空的，因为它们不共享</span></span>
<span class="line"><span style="color:#569CD6;">RUN</span><span style="color:#D4D4D4;"> echo $MY_VAR</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述示例中，第一个构建阶段中设置的<code>MY_VAR</code>环境变量可以在该阶段内使用，并通过<code>echo</code>命令打印出来。然而，在第二个构建阶段中，当我们尝试打印<code>MY_VAR</code>环境变量时，它将为空，因为它不会从第一个阶段传递到第二个阶段。</p><p>要在多个构建阶段之间共享环境变量，可以使用<code>ARG</code>指令将构建参数传递给多个阶段，然后在每个阶段中使用<code>ENV</code>指令设置环境变量。这样可以确保在多个构建阶段中都可以访问和使用相同的环境变量。</p>`,13);function m(D,v){const l=n("Badge");return i(),c("div",null,[r,s("p",null,[t(l,{type:"danger"},{default:p(()=>[a("TODO")]),_:1}),a(" 计划列表：")]),b])}const k=e(d,[["render",m],["__file","temp.html.vue"]]);export{k as default};

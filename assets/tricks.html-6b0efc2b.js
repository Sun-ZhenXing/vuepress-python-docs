import{_ as c,M as e,p as l,q as i,R as n,N as a,V as p,t as s,a1 as u}from"./framework-bafc524a.js";const r={},k=n("h1",{id:"python-语言技巧",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python-语言技巧","aria-hidden":"true"},"#"),s(" Python 语言技巧")],-1),d={class:"table-of-contents"},h=n("h2",{id:"_1-列表推导",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-列表推导","aria-hidden":"true"},"#"),s(" 1. 列表推导")],-1),_=n("h3",{id:"_1-1-从字典中提取子集",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-1-从字典中提取子集","aria-hidden":"true"},"#"),s(" 1.1 从字典中提取子集")],-1),m={class:"hint-container info"},v=n("p",{class:"hint-container-title"},"引用",-1),y=n("em",null,"Python Cookbook",-1),b={href:"https://python3-cookbook.readthedocs.io/zh_CN/latest/c01/p17_extract_subset_of_dict.html",target:"_blank",rel:"noopener noreferrer"},g=u(`<p>你想构造一个字典，它是另外一个字典的子集，最简单的方式是使用字典推导：</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>prices <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;ACME&#39;</span><span class="token punctuation">:</span> <span class="token number">45.23</span><span class="token punctuation">,</span>
    <span class="token string">&#39;AAPL&#39;</span><span class="token punctuation">:</span> <span class="token number">612.78</span><span class="token punctuation">,</span>
    <span class="token string">&#39;IBM&#39;</span><span class="token punctuation">:</span> <span class="token number">205.55</span><span class="token punctuation">,</span>
    <span class="token string">&#39;HPQ&#39;</span><span class="token punctuation">:</span> <span class="token number">37.20</span><span class="token punctuation">,</span>
    <span class="token string">&#39;FB&#39;</span><span class="token punctuation">:</span> <span class="token number">10.75</span>
<span class="token punctuation">}</span>
<span class="token comment"># Make a dictionary of all prices over 200</span>
p1 <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span> value <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> prices<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">}</span>

<span class="token comment"># Make a dictionary of tech stocks</span>
tech_names <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&#39;AAPL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IBM&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HPQ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;MSFT&#39;</span><span class="token punctuation">}</span>
p2 <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span> value <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> prices<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> key <span class="token keyword">in</span> tech_names<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大多数情况下字典推导能做到的，通过创建一个元组序列然后把它传给 <code>dict()</code> 函数也能实现：</p><div class="language-python" data-ext="py"><pre class="language-python"><code>p1 <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span> <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> prices<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span>
</code></pre></div><p>但是，字典推导方式表意更清晰，并且实际上也会运行的更快些（在这个例子中，实际测试几乎比 <code>dict()</code> 函数方式快整整一倍）</p><p>有时候完成同一件事会有多种方式。比如，第二个例子程序也可以像这样重写：</p><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token comment"># Make a dictionary of tech stocks</span>
tech_names <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&#39;AAPL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;IBM&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;HPQ&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;MSFT&#39;</span> <span class="token punctuation">}</span>
p2 <span class="token operator">=</span> <span class="token punctuation">{</span> key<span class="token punctuation">:</span> prices<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">for</span> key <span class="token keyword">in</span> prices<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> tech_names <span class="token punctuation">}</span>
</code></pre></div><p>但是，运行时间测试结果显示这种方案大概比第一种方案慢 1.6 倍。</p>`,8);function f(x,w){const t=e("router-link"),o=e("ExternalLinkIcon");return l(),i("div",null,[k,n("nav",d,[n("ul",null,[n("li",null,[a(t,{to:"#_1-列表推导"},{default:p(()=>[s("1. 列表推导")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#_1-1-从字典中提取子集"},{default:p(()=>[s("1.1 从字典中提取子集")]),_:1})])])])])]),h,_,n("div",m,[v,n("p",null,[s("引用自 "),y,s("："),n("a",b,[s("从字典中提取子集"),a(o)]),s("。")])]),g])}const P=c(r,[["render",f],["__file","tricks.html.vue"]]);export{P as default};
